/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MarketplaceItem_category}
 */
// @ts-ignore
export function createMarketplaceItem_categoryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMarketplaceItem_category;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MarketplaceItem_documentation}
 */
// @ts-ignore
export function createMarketplaceItem_documentationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMarketplaceItem_documentation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MarketplaceItem_resources}
 */
// @ts-ignore
export function createMarketplaceItem_resourcesFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMarketplaceItem_resources;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MarketplaceItem_version}
 */
// @ts-ignore
export function createMarketplaceItem_versionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMarketplaceItem_version;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MarketplaceItem_visibility}
 */
// @ts-ignore
export function createMarketplaceItem_visibilityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMarketplaceItem_visibility;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MarketplaceItem}
 */
// @ts-ignore
export function createMarketplaceItemFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMarketplaceItem;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MarketplaceItemVersion_visibility}
 */
// @ts-ignore
export function createMarketplaceItemVersion_visibilityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMarketplaceItemVersion_visibility;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MarketplaceItemVersion}
 */
// @ts-ignore
export function createMarketplaceItemVersionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMarketplaceItemVersion;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMarketplaceItem(marketplaceItem: Partial<MarketplaceItem> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "category": n => { marketplaceItem.category = n.getObjectValue<MarketplaceItem_category>(createMarketplaceItem_categoryFromDiscriminatorValue); },
        "categoryId": n => { marketplaceItem.categoryId = n.getStringValue(); },
        "comingSoon": n => { marketplaceItem.comingSoon = n.getBooleanValue(); },
        "componentsIds": n => { marketplaceItem.componentsIds = n.getCollectionOfPrimitiveValues<string>(); },
        "description": n => { marketplaceItem.description = n.getStringValue(); },
        "documentation": n => { marketplaceItem.documentation = n.getObjectValue<MarketplaceItem_documentation>(createMarketplaceItem_documentationFromDiscriminatorValue); },
        "_id": n => { marketplaceItem.id = n.getStringValue(); },
        "imageUrl": n => { marketplaceItem.imageUrl = n.getStringValue(); },
        "isVersioningSupported": n => { marketplaceItem.isVersioningSupported = n.getBooleanValue(); },
        "itemId": n => { marketplaceItem.itemId = n.getStringValue(); },
        "name": n => { marketplaceItem.name = n.getStringValue(); },
        "providerId": n => { marketplaceItem.providerId = n.getStringValue(); },
        "publishOnMiaDocumentation": n => { marketplaceItem.publishOnMiaDocumentation = n.getBooleanValue(); },
        "releaseDate": n => { marketplaceItem.releaseDate = n.getStringValue(); },
        "releaseStage": n => { marketplaceItem.releaseStage = n.getStringValue(); },
        "repositoryUrl": n => { marketplaceItem.repositoryUrl = n.getStringValue(); },
        "resources": n => { marketplaceItem.resources = n.getObjectValue<MarketplaceItem_resources>(createMarketplaceItem_resourcesFromDiscriminatorValue); },
        "supportedBy": n => { marketplaceItem.supportedBy = n.getStringValue(); },
        "supportedByImageUrl": n => { marketplaceItem.supportedByImageUrl = n.getStringValue(); },
        "tenantId": n => { marketplaceItem.tenantId = n.getStringValue(); },
        "type": n => { marketplaceItem.type = n.getStringValue(); },
        "version": n => { marketplaceItem.version = n.getObjectValue<MarketplaceItem_version>(createMarketplaceItem_versionFromDiscriminatorValue); },
        "visibility": n => { marketplaceItem.visibility = n.getObjectValue<MarketplaceItem_visibility>(createMarketplaceItem_visibilityFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMarketplaceItem_category(marketplaceItem_category: Partial<MarketplaceItem_category> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "id": n => { marketplaceItem_category.id = n.getStringValue(); },
        "label": n => { marketplaceItem_category.label = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMarketplaceItem_documentation(marketplaceItem_documentation: Partial<MarketplaceItem_documentation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "type": n => { marketplaceItem_documentation.type = n.getEnumValue<MarketplaceItem_documentation_type>(MarketplaceItem_documentation_typeObject); },
        "url": n => { marketplaceItem_documentation.url = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMarketplaceItem_resources(marketplaceItem_resources: Partial<MarketplaceItem_resources> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMarketplaceItem_version(marketplaceItem_version: Partial<MarketplaceItem_version> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "name": n => { marketplaceItem_version.name = n.getStringValue(); },
        "releaseNote": n => { marketplaceItem_version.releaseNote = n.getStringValue(); },
        "security": n => { marketplaceItem_version.security = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMarketplaceItem_visibility(marketplaceItem_visibility: Partial<MarketplaceItem_visibility> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "allTenants": n => { marketplaceItem_visibility.allTenants = n.getBooleanValue(); },
        "public": n => { marketplaceItem_visibility.public = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMarketplaceItemVersion(marketplaceItemVersion: Partial<MarketplaceItemVersion> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "comingSoon": n => { marketplaceItemVersion.comingSoon = n.getBooleanValue(); },
        "description": n => { marketplaceItemVersion.description = n.getStringValue(); },
        "name": n => { marketplaceItemVersion.name = n.getStringValue(); },
        "reference": n => { marketplaceItemVersion.reference = n.getStringValue(); },
        "releaseDate": n => { marketplaceItemVersion.releaseDate = n.getStringValue(); },
        "releaseNote": n => { marketplaceItemVersion.releaseNote = n.getStringValue(); },
        "security": n => { marketplaceItemVersion.security = n.getBooleanValue(); },
        "version": n => { marketplaceItemVersion.version = n.getStringValue(); },
        "visibility": n => { marketplaceItemVersion.visibility = n.getObjectValue<MarketplaceItemVersion_visibility>(createMarketplaceItemVersion_visibilityFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMarketplaceItemVersion_visibility(marketplaceItemVersion_visibility: Partial<MarketplaceItemVersion_visibility> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "allTenants": n => { marketplaceItemVersion_visibility.allTenants = n.getBooleanValue(); },
        "public": n => { marketplaceItemVersion_visibility.public = n.getBooleanValue(); },
    }
}
export interface MarketplaceItem extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The category property
     */
    category?: MarketplaceItem_category | null;
    /**
     * The categoryId property
     */
    categoryId?: string | null;
    /**
     * The comingSoon property
     */
    comingSoon?: boolean | null;
    /**
     * The componentsIds property
     */
    componentsIds?: string[] | null;
    /**
     * The description property
     */
    description?: string | null;
    /**
     * The documentation property
     */
    documentation?: MarketplaceItem_documentation | null;
    /**
     * The _id property
     */
    id?: string | null;
    /**
     * The imageUrl property
     */
    imageUrl?: string | null;
    /**
     * The isVersioningSupported property
     */
    isVersioningSupported?: boolean | null;
    /**
     * The itemId property
     */
    itemId?: string | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The providerId property
     */
    providerId?: string | null;
    /**
     * The publishOnMiaDocumentation property
     */
    publishOnMiaDocumentation?: boolean | null;
    /**
     * The releaseDate property
     */
    releaseDate?: string | null;
    /**
     * The releaseStage property
     */
    releaseStage?: string | null;
    /**
     * The repositoryUrl property
     */
    repositoryUrl?: string | null;
    /**
     * The resources property
     */
    resources?: MarketplaceItem_resources | null;
    /**
     * The supportedBy property
     */
    supportedBy?: string | null;
    /**
     * The supportedByImageUrl property
     */
    supportedByImageUrl?: string | null;
    /**
     * The tenantId property
     */
    tenantId?: string | null;
    /**
     * The type property
     */
    type?: string | null;
    /**
     * The version property
     */
    version?: MarketplaceItem_version | null;
    /**
     * The visibility property
     */
    visibility?: MarketplaceItem_visibility | null;
}
export interface MarketplaceItem_category extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The label property
     */
    label?: string | null;
}
export interface MarketplaceItem_documentation extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The type property
     */
    type?: MarketplaceItem_documentation_type | null;
    /**
     * The url property
     */
    url?: string | null;
}
export type MarketplaceItem_documentation_type = (typeof MarketplaceItem_documentation_typeObject)[keyof typeof MarketplaceItem_documentation_typeObject];
export interface MarketplaceItem_resources extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface MarketplaceItem_version extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The releaseNote property
     */
    releaseNote?: string | null;
    /**
     * The security property
     */
    security?: boolean | null;
}
export interface MarketplaceItem_visibility extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The allTenants property
     */
    allTenants?: boolean | null;
    /**
     * The public property
     */
    public?: boolean | null;
}
export interface MarketplaceItemVersion extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The comingSoon property
     */
    comingSoon?: boolean | null;
    /**
     * The description property
     */
    description?: string | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The reference property
     */
    reference?: string | null;
    /**
     * The releaseDate property
     */
    releaseDate?: string | null;
    /**
     * The releaseNote property
     */
    releaseNote?: string | null;
    /**
     * The security property
     */
    security?: boolean | null;
    /**
     * The version property
     */
    version?: string | null;
    /**
     * The visibility property
     */
    visibility?: MarketplaceItemVersion_visibility | null;
}
export interface MarketplaceItemVersion_visibility extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The allTenants property
     */
    allTenants?: boolean | null;
    /**
     * The public property
     */
    public?: boolean | null;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMarketplaceItem(writer: SerializationWriter, marketplaceItem: Partial<MarketplaceItem> | undefined | null = {}) : void {
    if (marketplaceItem) {
        writer.writeObjectValue<MarketplaceItem_category>("category", marketplaceItem.category, serializeMarketplaceItem_category);
        writer.writeStringValue("categoryId", marketplaceItem.categoryId);
        writer.writeBooleanValue("comingSoon", marketplaceItem.comingSoon);
        writer.writeCollectionOfPrimitiveValues<string>("componentsIds", marketplaceItem.componentsIds);
        writer.writeStringValue("description", marketplaceItem.description);
        writer.writeObjectValue<MarketplaceItem_documentation>("documentation", marketplaceItem.documentation, serializeMarketplaceItem_documentation);
        writer.writeStringValue("_id", marketplaceItem.id);
        writer.writeStringValue("imageUrl", marketplaceItem.imageUrl);
        writer.writeBooleanValue("isVersioningSupported", marketplaceItem.isVersioningSupported);
        writer.writeStringValue("itemId", marketplaceItem.itemId);
        writer.writeStringValue("name", marketplaceItem.name);
        writer.writeStringValue("providerId", marketplaceItem.providerId);
        writer.writeBooleanValue("publishOnMiaDocumentation", marketplaceItem.publishOnMiaDocumentation);
        writer.writeStringValue("releaseDate", marketplaceItem.releaseDate);
        writer.writeStringValue("releaseStage", marketplaceItem.releaseStage);
        writer.writeStringValue("repositoryUrl", marketplaceItem.repositoryUrl);
        writer.writeObjectValue<MarketplaceItem_resources>("resources", marketplaceItem.resources, serializeMarketplaceItem_resources);
        writer.writeStringValue("supportedBy", marketplaceItem.supportedBy);
        writer.writeStringValue("supportedByImageUrl", marketplaceItem.supportedByImageUrl);
        writer.writeStringValue("tenantId", marketplaceItem.tenantId);
        writer.writeStringValue("type", marketplaceItem.type);
        writer.writeObjectValue<MarketplaceItem_version>("version", marketplaceItem.version, serializeMarketplaceItem_version);
        writer.writeObjectValue<MarketplaceItem_visibility>("visibility", marketplaceItem.visibility, serializeMarketplaceItem_visibility);
        writer.writeAdditionalData(marketplaceItem.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMarketplaceItem_category(writer: SerializationWriter, marketplaceItem_category: Partial<MarketplaceItem_category> | undefined | null = {}) : void {
    if (marketplaceItem_category) {
        writer.writeStringValue("id", marketplaceItem_category.id);
        writer.writeStringValue("label", marketplaceItem_category.label);
        writer.writeAdditionalData(marketplaceItem_category.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMarketplaceItem_documentation(writer: SerializationWriter, marketplaceItem_documentation: Partial<MarketplaceItem_documentation> | undefined | null = {}) : void {
    if (marketplaceItem_documentation) {
        writer.writeEnumValue<MarketplaceItem_documentation_type>("type", marketplaceItem_documentation.type);
        writer.writeStringValue("url", marketplaceItem_documentation.url);
        writer.writeAdditionalData(marketplaceItem_documentation.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMarketplaceItem_resources(writer: SerializationWriter, marketplaceItem_resources: Partial<MarketplaceItem_resources> | undefined | null = {}) : void {
    if (marketplaceItem_resources) {
        writer.writeAdditionalData(marketplaceItem_resources.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMarketplaceItem_version(writer: SerializationWriter, marketplaceItem_version: Partial<MarketplaceItem_version> | undefined | null = {}) : void {
    if (marketplaceItem_version) {
        writer.writeStringValue("name", marketplaceItem_version.name);
        writer.writeStringValue("releaseNote", marketplaceItem_version.releaseNote);
        writer.writeBooleanValue("security", marketplaceItem_version.security);
        writer.writeAdditionalData(marketplaceItem_version.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMarketplaceItem_visibility(writer: SerializationWriter, marketplaceItem_visibility: Partial<MarketplaceItem_visibility> | undefined | null = {}) : void {
    if (marketplaceItem_visibility) {
        writer.writeBooleanValue("allTenants", marketplaceItem_visibility.allTenants);
        writer.writeBooleanValue("public", marketplaceItem_visibility.public);
        writer.writeAdditionalData(marketplaceItem_visibility.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMarketplaceItemVersion(writer: SerializationWriter, marketplaceItemVersion: Partial<MarketplaceItemVersion> | undefined | null = {}) : void {
    if (marketplaceItemVersion) {
        writer.writeBooleanValue("comingSoon", marketplaceItemVersion.comingSoon);
        writer.writeStringValue("description", marketplaceItemVersion.description);
        writer.writeStringValue("name", marketplaceItemVersion.name);
        writer.writeStringValue("reference", marketplaceItemVersion.reference);
        writer.writeStringValue("releaseDate", marketplaceItemVersion.releaseDate);
        writer.writeStringValue("releaseNote", marketplaceItemVersion.releaseNote);
        writer.writeBooleanValue("security", marketplaceItemVersion.security);
        writer.writeStringValue("version", marketplaceItemVersion.version);
        writer.writeObjectValue<MarketplaceItemVersion_visibility>("visibility", marketplaceItemVersion.visibility, serializeMarketplaceItemVersion_visibility);
        writer.writeAdditionalData(marketplaceItemVersion.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMarketplaceItemVersion_visibility(writer: SerializationWriter, marketplaceItemVersion_visibility: Partial<MarketplaceItemVersion_visibility> | undefined | null = {}) : void {
    if (marketplaceItemVersion_visibility) {
        writer.writeBooleanValue("allTenants", marketplaceItemVersion_visibility.allTenants);
        writer.writeBooleanValue("public", marketplaceItemVersion_visibility.public);
        writer.writeAdditionalData(marketplaceItemVersion_visibility.additionalData);
    }
}
export const MarketplaceItem_documentation_typeObject = {
    Markdown: "markdown",
    ExternalLink: "externalLink",
} as const;
/* tslint:enable */
/* eslint-enable */
