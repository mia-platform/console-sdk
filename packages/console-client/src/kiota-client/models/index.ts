/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type AdditionalDataHolder, type ApiError, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface CatalogCategory extends Parsable {
    /**
     * The categoryId property
     */
    categoryId?: string | null;
    /**
     * The label property
     */
    label?: string | null;
}
export interface CatalogCrd extends Parsable {
    /**
     * The description property
     */
    description?: string | null;
    /**
     * The itemId property
     */
    itemId?: string | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The resources property
     */
    resources?: CatalogCrd_resources | null;
    /**
     * The tenantId property
     */
    tenantId?: string | null;
}
export interface CatalogCrd_resources extends Parsable {
    /**
     * The controlledFields property
     */
    controlledFields?: CatalogCrd_resources_controlledFields[] | null;
    /**
     * The isVersioningSupported property
     */
    isVersioningSupported?: boolean | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The validation property
     */
    validation?: CatalogCrd_resources_validationMember1 | CatalogCrd_resources_validationMember2 | null;
}
export interface CatalogCrd_resources_controlledFields extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The jsonPath property
     */
    jsonPath?: string | null;
    /**
     * The key property
     */
    key?: string | null;
}
export type CatalogCrd_resources_validation = CatalogCrd_resources_validationMember1 | CatalogCrd_resources_validationMember2;
export interface CatalogCrd_resources_validationMember1 extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The jsonSchema property
     */
    jsonSchema?: CatalogCrd_resources_validationMember1_jsonSchema | null;
}
export interface CatalogCrd_resources_validationMember1_jsonSchema extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface CatalogCrd_resources_validationMember2 extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The validationWebhook property
     */
    validationWebhook?: CatalogCrd_resources_validationMember2_validationWebhook | null;
}
export interface CatalogCrd_resources_validationMember2_validationWebhook extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The urls property
     */
    urls?: CatalogCrd_resources_validationMember2_validationWebhook_urls | null;
}
export interface CatalogCrd_resources_validationMember2_validationWebhook_urls extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The schema property
     */
    schema?: string | null;
    /**
     * The validation property
     */
    validation?: string | null;
}
export interface CatalogItem extends Parsable {
    /**
     * The category property
     */
    category?: CatalogItem_category | null;
    /**
     * The componentsIds property
     */
    componentsIds?: string[] | null;
    /**
     * The description property
     */
    description?: string | null;
    /**
     * The documentation property
     */
    documentation?: CatalogItem_documentation | null;
    /**
     * The _id property
     */
    id?: string | null;
    /**
     * The imageUrl property
     */
    imageUrl?: string | null;
    /**
     * The isLatest property
     */
    isLatest?: boolean | null;
    /**
     * The itemId property
     */
    itemId?: string | null;
    /**
     * The lifecycleStatus property
     */
    lifecycleStatus?: CatalogItem_lifecycleStatus | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The providerId property
     */
    providerId?: string | null;
    /**
     * The publishOnMiaDocumentation property
     */
    publishOnMiaDocumentation?: boolean | null;
    /**
     * The releaseDate property
     */
    releaseDate?: Date | null;
    /**
     * The repositoryUrl property
     */
    repositoryUrl?: string | null;
    /**
     * The resources property
     */
    resources?: CatalogItem_resources | null;
    /**
     * The supportedBy property
     */
    supportedBy?: string | null;
    /**
     * The supportedByImageUrl property
     */
    supportedByImageUrl?: string | null;
    /**
     * The tenantId property
     */
    tenantId?: string | null;
    /**
     * The type property
     */
    type?: string | null;
    /**
     * The version property
     */
    version?: CatalogItem_version | null;
    /**
     * The visibility property
     */
    visibility?: CatalogItem_visibility | null;
}
export interface CatalogItem_category extends Parsable {
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The label property
     */
    label?: string | null;
}
export interface CatalogItem_documentation extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The type property
     */
    type?: CatalogItem_documentation_type | null;
    /**
     * The url property
     */
    url?: string | null;
}
export type CatalogItem_documentation_type = (typeof CatalogItem_documentation_typeObject)[keyof typeof CatalogItem_documentation_typeObject];
export type CatalogItem_lifecycleStatus = (typeof CatalogItem_lifecycleStatusObject)[keyof typeof CatalogItem_lifecycleStatusObject];
export interface CatalogItem_resources extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface CatalogItem_version extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Semantic version
     */
    name?: string | null;
    /**
     * Markdown release note
     */
    releaseNote?: string | null;
    /**
     * Flag stating if the version addresses any vulnerability
     */
    security?: boolean | null;
}
export interface CatalogItem_visibility extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * If true, the item will be accessible to all companies
     */
    allTenants?: boolean | null;
    /**
     * If true, the item will be accessible from any user that access the Console, even if not authenticated
     */
    public?: boolean | null;
}
export interface CatalogItemManifest extends Parsable {
    /**
     * The categoryId property
     */
    categoryId?: string | null;
    /**
     * The description property
     */
    description?: string | null;
    /**
     * The documentation property
     */
    documentation?: CatalogItemManifest_documentation | null;
    /**
     * The imageUrl property
     */
    imageUrl?: string | null;
    /**
     * The itemId property
     */
    itemId?: string | null;
    /**
     * The lifecycleStatus property
     */
    lifecycleStatus?: CatalogItemManifest_lifecycleStatus | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The providerId property
     */
    providerId?: string | null;
    /**
     * The publishOnMiaDocumentation property
     */
    publishOnMiaDocumentation?: boolean | null;
    /**
     * The releaseDate property
     */
    releaseDate?: Date | null;
    /**
     * The repositoryUrl property
     */
    repositoryUrl?: string | null;
    /**
     * The resources property
     */
    resources?: CatalogItemManifest_resources | null;
    /**
     * The supportedBy property
     */
    supportedBy?: string | null;
    /**
     * The supportedByImageUrl property
     */
    supportedByImageUrl?: string | null;
    /**
     * The tenantId property
     */
    tenantId?: string | null;
    /**
     * The type property
     */
    type?: string | null;
    /**
     * The version property
     */
    version?: CatalogItemManifest_version | null;
    /**
     * The visibility property
     */
    visibility?: CatalogItemManifest_visibility | null;
}
export interface CatalogItemManifest_documentation extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The type property
     */
    type?: CatalogItemManifest_documentation_type | null;
    /**
     * The url property
     */
    url?: string | null;
}
export type CatalogItemManifest_documentation_type = (typeof CatalogItemManifest_documentation_typeObject)[keyof typeof CatalogItemManifest_documentation_typeObject];
export type CatalogItemManifest_lifecycleStatus = (typeof CatalogItemManifest_lifecycleStatusObject)[keyof typeof CatalogItemManifest_lifecycleStatusObject];
export interface CatalogItemManifest_resources extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface CatalogItemManifest_version extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The releaseNote property
     */
    releaseNote?: string | null;
    /**
     * The security property
     */
    security?: boolean | null;
}
export interface CatalogItemManifest_visibility extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The allTenants property
     */
    allTenants?: boolean | null;
    /**
     * The public property
     */
    public?: boolean | null;
}
export interface CatalogRelease extends Parsable {
    /**
     * The description property
     */
    description?: string | null;
    /**
     * The isLatest property
     */
    isLatest?: boolean | null;
    /**
     * The lifecycleStatus property
     */
    lifecycleStatus?: CatalogRelease_lifecycleStatus | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The reference property
     */
    reference?: string | null;
    /**
     * The releaseDate property
     */
    releaseDate?: Date | null;
    /**
     * The releaseNote property
     */
    releaseNote?: string | null;
    /**
     * The security property
     */
    security?: boolean | null;
    /**
     * The version property
     */
    version?: CatalogRelease_version | null;
    /**
     * The visibility property
     */
    visibility?: CatalogRelease_visibility | null;
}
export type CatalogRelease_lifecycleStatus = (typeof CatalogRelease_lifecycleStatusObject)[keyof typeof CatalogRelease_lifecycleStatusObject];
export type CatalogRelease_version = (typeof CatalogRelease_versionObject)[keyof typeof CatalogRelease_versionObject];
export interface CatalogRelease_visibility extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The allTenants property
     */
    allTenants?: boolean | null;
    /**
     * The public property
     */
    public?: boolean | null;
}
export interface CatalogVersionedItem extends Parsable {
    /**
     * The category property
     */
    category?: CatalogVersionedItem_category | null;
    /**
     * The componentsIds property
     */
    componentsIds?: string[] | null;
    /**
     * The description property
     */
    description?: string | null;
    /**
     * The documentation property
     */
    documentation?: CatalogVersionedItem_documentation | null;
    /**
     * The _id property
     */
    id?: string | null;
    /**
     * The imageUrl property
     */
    imageUrl?: string | null;
    /**
     * The isLatest property
     */
    isLatest?: boolean | null;
    /**
     * The itemId property
     */
    itemId?: string | null;
    /**
     * The lifecycleStatus property
     */
    lifecycleStatus?: CatalogVersionedItem_lifecycleStatus | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The providerId property
     */
    providerId?: string | null;
    /**
     * The publishOnMiaDocumentation property
     */
    publishOnMiaDocumentation?: boolean | null;
    /**
     * The releaseDate property
     */
    releaseDate?: Date | null;
    /**
     * The repositoryUrl property
     */
    repositoryUrl?: string | null;
    /**
     * The resources property
     */
    resources?: CatalogVersionedItem_resources | null;
    /**
     * The supportedBy property
     */
    supportedBy?: string | null;
    /**
     * The supportedByImageUrl property
     */
    supportedByImageUrl?: string | null;
    /**
     * The tenantId property
     */
    tenantId?: string | null;
    /**
     * The type property
     */
    type?: string | null;
    /**
     * The version property
     */
    version?: CatalogVersionedItem_version | null;
    /**
     * The visibility property
     */
    visibility?: CatalogVersionedItem_visibility | null;
}
export interface CatalogVersionedItem_category extends Parsable {
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The label property
     */
    label?: string | null;
}
export interface CatalogVersionedItem_documentation extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The type property
     */
    type?: CatalogVersionedItem_documentation_type | null;
    /**
     * The url property
     */
    url?: string | null;
}
export type CatalogVersionedItem_documentation_type = (typeof CatalogVersionedItem_documentation_typeObject)[keyof typeof CatalogVersionedItem_documentation_typeObject];
export type CatalogVersionedItem_lifecycleStatus = (typeof CatalogVersionedItem_lifecycleStatusObject)[keyof typeof CatalogVersionedItem_lifecycleStatusObject];
export interface CatalogVersionedItem_resources extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface CatalogVersionedItem_version extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The releaseNote property
     */
    releaseNote?: string | null;
    /**
     * The security property
     */
    security?: boolean | null;
}
export interface CatalogVersionedItem_visibility extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The allTenants property
     */
    allTenants?: boolean | null;
    /**
     * The public property
     */
    public?: boolean | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CatalogCategory}
 */
// @ts-ignore
export function createCatalogCategoryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCatalogCategory;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CatalogCrd_resources_controlledFields}
 */
// @ts-ignore
export function createCatalogCrd_resources_controlledFieldsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCatalogCrd_resources_controlledFields;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CatalogCrd_resources_validationMember1 | CatalogCrd_resources_validationMember2}
 */
// @ts-ignore
export function createCatalogCrd_resources_validationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCatalogCrd_resources_validation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CatalogCrd_resources_validationMember1_jsonSchema}
 */
// @ts-ignore
export function createCatalogCrd_resources_validationMember1_jsonSchemaFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCatalogCrd_resources_validationMember1_jsonSchema;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CatalogCrd_resources_validationMember1}
 */
// @ts-ignore
export function createCatalogCrd_resources_validationMember1FromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCatalogCrd_resources_validationMember1;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CatalogCrd_resources_validationMember2_validationWebhook_urls}
 */
// @ts-ignore
export function createCatalogCrd_resources_validationMember2_validationWebhook_urlsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCatalogCrd_resources_validationMember2_validationWebhook_urls;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CatalogCrd_resources_validationMember2_validationWebhook}
 */
// @ts-ignore
export function createCatalogCrd_resources_validationMember2_validationWebhookFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCatalogCrd_resources_validationMember2_validationWebhook;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CatalogCrd_resources_validationMember2}
 */
// @ts-ignore
export function createCatalogCrd_resources_validationMember2FromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCatalogCrd_resources_validationMember2;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CatalogCrd_resources}
 */
// @ts-ignore
export function createCatalogCrd_resourcesFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCatalogCrd_resources;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CatalogCrd}
 */
// @ts-ignore
export function createCatalogCrdFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCatalogCrd;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CatalogItem_category}
 */
// @ts-ignore
export function createCatalogItem_categoryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCatalogItem_category;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CatalogItem_documentation}
 */
// @ts-ignore
export function createCatalogItem_documentationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCatalogItem_documentation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CatalogItem_resources}
 */
// @ts-ignore
export function createCatalogItem_resourcesFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCatalogItem_resources;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CatalogItem_version}
 */
// @ts-ignore
export function createCatalogItem_versionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCatalogItem_version;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CatalogItem_visibility}
 */
// @ts-ignore
export function createCatalogItem_visibilityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCatalogItem_visibility;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CatalogItem}
 */
// @ts-ignore
export function createCatalogItemFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCatalogItem;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CatalogItemManifest_documentation}
 */
// @ts-ignore
export function createCatalogItemManifest_documentationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCatalogItemManifest_documentation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CatalogItemManifest_resources}
 */
// @ts-ignore
export function createCatalogItemManifest_resourcesFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCatalogItemManifest_resources;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CatalogItemManifest_version}
 */
// @ts-ignore
export function createCatalogItemManifest_versionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCatalogItemManifest_version;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CatalogItemManifest_visibility}
 */
// @ts-ignore
export function createCatalogItemManifest_visibilityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCatalogItemManifest_visibility;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CatalogItemManifest}
 */
// @ts-ignore
export function createCatalogItemManifestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCatalogItemManifest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CatalogRelease_visibility}
 */
// @ts-ignore
export function createCatalogRelease_visibilityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCatalogRelease_visibility;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CatalogRelease}
 */
// @ts-ignore
export function createCatalogReleaseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCatalogRelease;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CatalogVersionedItem_category}
 */
// @ts-ignore
export function createCatalogVersionedItem_categoryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCatalogVersionedItem_category;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CatalogVersionedItem_documentation}
 */
// @ts-ignore
export function createCatalogVersionedItem_documentationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCatalogVersionedItem_documentation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CatalogVersionedItem_resources}
 */
// @ts-ignore
export function createCatalogVersionedItem_resourcesFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCatalogVersionedItem_resources;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CatalogVersionedItem_version}
 */
// @ts-ignore
export function createCatalogVersionedItem_versionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCatalogVersionedItem_version;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CatalogVersionedItem_visibility}
 */
// @ts-ignore
export function createCatalogVersionedItem_visibilityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCatalogVersionedItem_visibility;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CatalogVersionedItem}
 */
// @ts-ignore
export function createCatalogVersionedItemFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCatalogVersionedItem;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HttpError}
 */
// @ts-ignore
export function createHttpErrorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHttpError;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCatalogCategory(catalogCategory: Partial<CatalogCategory> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "categoryId": n => { catalogCategory.categoryId = n.getStringValue(); },
        "label": n => { catalogCategory.label = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCatalogCrd(catalogCrd: Partial<CatalogCrd> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "description": n => { catalogCrd.description = n.getStringValue(); },
        "itemId": n => { catalogCrd.itemId = n.getStringValue(); },
        "name": n => { catalogCrd.name = n.getStringValue(); },
        "resources": n => { catalogCrd.resources = n.getObjectValue<CatalogCrd_resources>(createCatalogCrd_resourcesFromDiscriminatorValue); },
        "tenantId": n => { catalogCrd.tenantId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCatalogCrd_resources(catalogCrd_resources: Partial<CatalogCrd_resources> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "controlledFields": n => { catalogCrd_resources.controlledFields = n.getCollectionOfObjectValues<CatalogCrd_resources_controlledFields>(createCatalogCrd_resources_controlledFieldsFromDiscriminatorValue); },
        "isVersioningSupported": n => { catalogCrd_resources.isVersioningSupported = n.getBooleanValue(); },
        "name": n => { catalogCrd_resources.name = n.getStringValue(); },
        "validation": n => { catalogCrd_resources.validation = n.getObjectValue<CatalogCrd_resources_validationMember1>(createCatalogCrd_resources_validationMember1FromDiscriminatorValue) ?? n.getObjectValue<CatalogCrd_resources_validationMember2>(createCatalogCrd_resources_validationMember2FromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCatalogCrd_resources_controlledFields(catalogCrd_resources_controlledFields: Partial<CatalogCrd_resources_controlledFields> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "jsonPath": n => { catalogCrd_resources_controlledFields.jsonPath = n.getStringValue(); },
        "key": n => { catalogCrd_resources_controlledFields.key = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCatalogCrd_resources_validation(catalogCrd_resources_validation: Partial<CatalogCrd_resources_validationMember1 | CatalogCrd_resources_validationMember2> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoCatalogCrd_resources_validationMember1(catalogCrd_resources_validation as CatalogCrd_resources_validationMember1),
        ...deserializeIntoCatalogCrd_resources_validationMember2(catalogCrd_resources_validation as CatalogCrd_resources_validationMember2),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCatalogCrd_resources_validationMember1(catalogCrd_resources_validationMember1: Partial<CatalogCrd_resources_validationMember1> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "jsonSchema": n => { catalogCrd_resources_validationMember1.jsonSchema = n.getObjectValue<CatalogCrd_resources_validationMember1_jsonSchema>(createCatalogCrd_resources_validationMember1_jsonSchemaFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCatalogCrd_resources_validationMember1_jsonSchema(catalogCrd_resources_validationMember1_jsonSchema: Partial<CatalogCrd_resources_validationMember1_jsonSchema> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCatalogCrd_resources_validationMember2(catalogCrd_resources_validationMember2: Partial<CatalogCrd_resources_validationMember2> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "validationWebhook": n => { catalogCrd_resources_validationMember2.validationWebhook = n.getObjectValue<CatalogCrd_resources_validationMember2_validationWebhook>(createCatalogCrd_resources_validationMember2_validationWebhookFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCatalogCrd_resources_validationMember2_validationWebhook(catalogCrd_resources_validationMember2_validationWebhook: Partial<CatalogCrd_resources_validationMember2_validationWebhook> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "urls": n => { catalogCrd_resources_validationMember2_validationWebhook.urls = n.getObjectValue<CatalogCrd_resources_validationMember2_validationWebhook_urls>(createCatalogCrd_resources_validationMember2_validationWebhook_urlsFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCatalogCrd_resources_validationMember2_validationWebhook_urls(catalogCrd_resources_validationMember2_validationWebhook_urls: Partial<CatalogCrd_resources_validationMember2_validationWebhook_urls> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "schema": n => { catalogCrd_resources_validationMember2_validationWebhook_urls.schema = n.getStringValue(); },
        "validation": n => { catalogCrd_resources_validationMember2_validationWebhook_urls.validation = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCatalogItem(catalogItem: Partial<CatalogItem> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "category": n => { catalogItem.category = n.getObjectValue<CatalogItem_category>(createCatalogItem_categoryFromDiscriminatorValue); },
        "componentsIds": n => { catalogItem.componentsIds = n.getCollectionOfPrimitiveValues<string>(); },
        "description": n => { catalogItem.description = n.getStringValue(); },
        "documentation": n => { catalogItem.documentation = n.getObjectValue<CatalogItem_documentation>(createCatalogItem_documentationFromDiscriminatorValue); },
        "_id": n => { catalogItem.id = n.getStringValue(); },
        "imageUrl": n => { catalogItem.imageUrl = n.getStringValue(); },
        "isLatest": n => { catalogItem.isLatest = n.getBooleanValue(); },
        "itemId": n => { catalogItem.itemId = n.getStringValue(); },
        "lifecycleStatus": n => { catalogItem.lifecycleStatus = n.getEnumValue<CatalogItem_lifecycleStatus>(CatalogItem_lifecycleStatusObject); },
        "name": n => { catalogItem.name = n.getStringValue(); },
        "providerId": n => { catalogItem.providerId = n.getStringValue(); },
        "publishOnMiaDocumentation": n => { catalogItem.publishOnMiaDocumentation = n.getBooleanValue(); },
        "releaseDate": n => { catalogItem.releaseDate = n.getDateValue(); },
        "repositoryUrl": n => { catalogItem.repositoryUrl = n.getStringValue(); },
        "resources": n => { catalogItem.resources = n.getObjectValue<CatalogItem_resources>(createCatalogItem_resourcesFromDiscriminatorValue); },
        "supportedBy": n => { catalogItem.supportedBy = n.getStringValue(); },
        "supportedByImageUrl": n => { catalogItem.supportedByImageUrl = n.getStringValue(); },
        "tenantId": n => { catalogItem.tenantId = n.getStringValue(); },
        "type": n => { catalogItem.type = n.getStringValue(); },
        "version": n => { catalogItem.version = n.getObjectValue<CatalogItem_version>(createCatalogItem_versionFromDiscriminatorValue); },
        "visibility": n => { catalogItem.visibility = n.getObjectValue<CatalogItem_visibility>(createCatalogItem_visibilityFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCatalogItem_category(catalogItem_category: Partial<CatalogItem_category> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "id": n => { catalogItem_category.id = n.getStringValue(); },
        "label": n => { catalogItem_category.label = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCatalogItem_documentation(catalogItem_documentation: Partial<CatalogItem_documentation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "type": n => { catalogItem_documentation.type = n.getEnumValue<CatalogItem_documentation_type>(CatalogItem_documentation_typeObject); },
        "url": n => { catalogItem_documentation.url = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCatalogItem_resources(catalogItem_resources: Partial<CatalogItem_resources> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCatalogItem_version(catalogItem_version: Partial<CatalogItem_version> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "name": n => { catalogItem_version.name = n.getStringValue(); },
        "releaseNote": n => { catalogItem_version.releaseNote = n.getStringValue(); },
        "security": n => { catalogItem_version.security = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCatalogItem_visibility(catalogItem_visibility: Partial<CatalogItem_visibility> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "allTenants": n => { catalogItem_visibility.allTenants = n.getBooleanValue(); },
        "public": n => { catalogItem_visibility.public = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCatalogItemManifest(catalogItemManifest: Partial<CatalogItemManifest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "categoryId": n => { catalogItemManifest.categoryId = n.getStringValue(); },
        "description": n => { catalogItemManifest.description = n.getStringValue(); },
        "documentation": n => { catalogItemManifest.documentation = n.getObjectValue<CatalogItemManifest_documentation>(createCatalogItemManifest_documentationFromDiscriminatorValue); },
        "imageUrl": n => { catalogItemManifest.imageUrl = n.getStringValue(); },
        "itemId": n => { catalogItemManifest.itemId = n.getStringValue(); },
        "lifecycleStatus": n => { catalogItemManifest.lifecycleStatus = n.getEnumValue<CatalogItemManifest_lifecycleStatus>(CatalogItemManifest_lifecycleStatusObject); },
        "name": n => { catalogItemManifest.name = n.getStringValue(); },
        "providerId": n => { catalogItemManifest.providerId = n.getStringValue(); },
        "publishOnMiaDocumentation": n => { catalogItemManifest.publishOnMiaDocumentation = n.getBooleanValue(); },
        "releaseDate": n => { catalogItemManifest.releaseDate = n.getDateValue(); },
        "repositoryUrl": n => { catalogItemManifest.repositoryUrl = n.getStringValue(); },
        "resources": n => { catalogItemManifest.resources = n.getObjectValue<CatalogItemManifest_resources>(createCatalogItemManifest_resourcesFromDiscriminatorValue); },
        "supportedBy": n => { catalogItemManifest.supportedBy = n.getStringValue(); },
        "supportedByImageUrl": n => { catalogItemManifest.supportedByImageUrl = n.getStringValue(); },
        "tenantId": n => { catalogItemManifest.tenantId = n.getStringValue(); },
        "type": n => { catalogItemManifest.type = n.getStringValue(); },
        "version": n => { catalogItemManifest.version = n.getObjectValue<CatalogItemManifest_version>(createCatalogItemManifest_versionFromDiscriminatorValue); },
        "visibility": n => { catalogItemManifest.visibility = n.getObjectValue<CatalogItemManifest_visibility>(createCatalogItemManifest_visibilityFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCatalogItemManifest_documentation(catalogItemManifest_documentation: Partial<CatalogItemManifest_documentation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "type": n => { catalogItemManifest_documentation.type = n.getEnumValue<CatalogItemManifest_documentation_type>(CatalogItemManifest_documentation_typeObject); },
        "url": n => { catalogItemManifest_documentation.url = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCatalogItemManifest_resources(catalogItemManifest_resources: Partial<CatalogItemManifest_resources> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCatalogItemManifest_version(catalogItemManifest_version: Partial<CatalogItemManifest_version> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "name": n => { catalogItemManifest_version.name = n.getStringValue(); },
        "releaseNote": n => { catalogItemManifest_version.releaseNote = n.getStringValue(); },
        "security": n => { catalogItemManifest_version.security = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCatalogItemManifest_visibility(catalogItemManifest_visibility: Partial<CatalogItemManifest_visibility> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "allTenants": n => { catalogItemManifest_visibility.allTenants = n.getBooleanValue(); },
        "public": n => { catalogItemManifest_visibility.public = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCatalogRelease(catalogRelease: Partial<CatalogRelease> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "description": n => { catalogRelease.description = n.getStringValue(); },
        "isLatest": n => { catalogRelease.isLatest = n.getBooleanValue(); },
        "lifecycleStatus": n => { catalogRelease.lifecycleStatus = n.getEnumValue<CatalogRelease_lifecycleStatus>(CatalogRelease_lifecycleStatusObject); },
        "name": n => { catalogRelease.name = n.getStringValue(); },
        "reference": n => { catalogRelease.reference = n.getStringValue(); },
        "releaseDate": n => { catalogRelease.releaseDate = n.getDateValue(); },
        "releaseNote": n => { catalogRelease.releaseNote = n.getStringValue(); },
        "security": n => { catalogRelease.security = n.getBooleanValue(); },
        "version": n => { catalogRelease.version = n.getEnumValue<CatalogRelease_version>(CatalogRelease_versionObject); },
        "visibility": n => { catalogRelease.visibility = n.getObjectValue<CatalogRelease_visibility>(createCatalogRelease_visibilityFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCatalogRelease_visibility(catalogRelease_visibility: Partial<CatalogRelease_visibility> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "allTenants": n => { catalogRelease_visibility.allTenants = n.getBooleanValue(); },
        "public": n => { catalogRelease_visibility.public = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCatalogVersionedItem(catalogVersionedItem: Partial<CatalogVersionedItem> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "category": n => { catalogVersionedItem.category = n.getObjectValue<CatalogVersionedItem_category>(createCatalogVersionedItem_categoryFromDiscriminatorValue); },
        "componentsIds": n => { catalogVersionedItem.componentsIds = n.getCollectionOfPrimitiveValues<string>(); },
        "description": n => { catalogVersionedItem.description = n.getStringValue(); },
        "documentation": n => { catalogVersionedItem.documentation = n.getObjectValue<CatalogVersionedItem_documentation>(createCatalogVersionedItem_documentationFromDiscriminatorValue); },
        "_id": n => { catalogVersionedItem.id = n.getStringValue(); },
        "imageUrl": n => { catalogVersionedItem.imageUrl = n.getStringValue(); },
        "isLatest": n => { catalogVersionedItem.isLatest = n.getBooleanValue(); },
        "itemId": n => { catalogVersionedItem.itemId = n.getStringValue(); },
        "lifecycleStatus": n => { catalogVersionedItem.lifecycleStatus = n.getEnumValue<CatalogVersionedItem_lifecycleStatus>(CatalogVersionedItem_lifecycleStatusObject); },
        "name": n => { catalogVersionedItem.name = n.getStringValue(); },
        "providerId": n => { catalogVersionedItem.providerId = n.getStringValue(); },
        "publishOnMiaDocumentation": n => { catalogVersionedItem.publishOnMiaDocumentation = n.getBooleanValue(); },
        "releaseDate": n => { catalogVersionedItem.releaseDate = n.getDateValue(); },
        "repositoryUrl": n => { catalogVersionedItem.repositoryUrl = n.getStringValue(); },
        "resources": n => { catalogVersionedItem.resources = n.getObjectValue<CatalogVersionedItem_resources>(createCatalogVersionedItem_resourcesFromDiscriminatorValue); },
        "supportedBy": n => { catalogVersionedItem.supportedBy = n.getStringValue(); },
        "supportedByImageUrl": n => { catalogVersionedItem.supportedByImageUrl = n.getStringValue(); },
        "tenantId": n => { catalogVersionedItem.tenantId = n.getStringValue(); },
        "type": n => { catalogVersionedItem.type = n.getStringValue(); },
        "version": n => { catalogVersionedItem.version = n.getObjectValue<CatalogVersionedItem_version>(createCatalogVersionedItem_versionFromDiscriminatorValue); },
        "visibility": n => { catalogVersionedItem.visibility = n.getObjectValue<CatalogVersionedItem_visibility>(createCatalogVersionedItem_visibilityFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCatalogVersionedItem_category(catalogVersionedItem_category: Partial<CatalogVersionedItem_category> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "id": n => { catalogVersionedItem_category.id = n.getStringValue(); },
        "label": n => { catalogVersionedItem_category.label = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCatalogVersionedItem_documentation(catalogVersionedItem_documentation: Partial<CatalogVersionedItem_documentation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "type": n => { catalogVersionedItem_documentation.type = n.getEnumValue<CatalogVersionedItem_documentation_type>(CatalogVersionedItem_documentation_typeObject); },
        "url": n => { catalogVersionedItem_documentation.url = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCatalogVersionedItem_resources(catalogVersionedItem_resources: Partial<CatalogVersionedItem_resources> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCatalogVersionedItem_version(catalogVersionedItem_version: Partial<CatalogVersionedItem_version> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "name": n => { catalogVersionedItem_version.name = n.getStringValue(); },
        "releaseNote": n => { catalogVersionedItem_version.releaseNote = n.getStringValue(); },
        "security": n => { catalogVersionedItem_version.security = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCatalogVersionedItem_visibility(catalogVersionedItem_visibility: Partial<CatalogVersionedItem_visibility> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "allTenants": n => { catalogVersionedItem_visibility.allTenants = n.getBooleanValue(); },
        "public": n => { catalogVersionedItem_visibility.public = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHttpError(httpError: Partial<HttpError> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "code": n => { httpError.code = n.getStringValue(); },
        "error": n => { httpError.errorEscaped = n.getStringValue(); },
        "message": n => { httpError.messageEscaped = n.getStringValue(); },
        "statusCode": n => { httpError.statusCode = n.getNumberValue(); },
    }
}
export interface HttpError extends AdditionalDataHolder, ApiError, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The code property
     */
    code?: string | null;
    /**
     * The error property
     */
    errorEscaped?: string | null;
    /**
     * The message property
     */
    messageEscaped?: string | null;
    /**
     * The statusCode property
     */
    statusCode?: number | null;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCatalogCategory(writer: SerializationWriter, catalogCategory: Partial<CatalogCategory> | undefined | null = {}) : void {
    if (catalogCategory) {
        writer.writeStringValue("categoryId", catalogCategory.categoryId);
        writer.writeStringValue("label", catalogCategory.label);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCatalogCrd(writer: SerializationWriter, catalogCrd: Partial<CatalogCrd> | undefined | null = {}) : void {
    if (catalogCrd) {
        writer.writeStringValue("description", catalogCrd.description);
        writer.writeStringValue("itemId", catalogCrd.itemId);
        writer.writeStringValue("name", catalogCrd.name);
        writer.writeObjectValue<CatalogCrd_resources>("resources", catalogCrd.resources, serializeCatalogCrd_resources);
        writer.writeStringValue("tenantId", catalogCrd.tenantId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCatalogCrd_resources(writer: SerializationWriter, catalogCrd_resources: Partial<CatalogCrd_resources> | undefined | null = {}) : void {
    if (catalogCrd_resources) {
        writer.writeCollectionOfObjectValues<CatalogCrd_resources_controlledFields>("controlledFields", catalogCrd_resources.controlledFields, serializeCatalogCrd_resources_controlledFields);
        writer.writeBooleanValue("isVersioningSupported", catalogCrd_resources.isVersioningSupported);
        writer.writeStringValue("name", catalogCrd_resources.name);
        writer.writeObjectValue<CatalogCrd_resources_validationMember1 | CatalogCrd_resources_validationMember2>("validation", catalogCrd_resources.validation, serializeCatalogCrd_resources_validation);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCatalogCrd_resources_controlledFields(writer: SerializationWriter, catalogCrd_resources_controlledFields: Partial<CatalogCrd_resources_controlledFields> | undefined | null = {}) : void {
    if (catalogCrd_resources_controlledFields) {
        writer.writeStringValue("jsonPath", catalogCrd_resources_controlledFields.jsonPath);
        writer.writeStringValue("key", catalogCrd_resources_controlledFields.key);
        writer.writeAdditionalData(catalogCrd_resources_controlledFields.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCatalogCrd_resources_validation(writer: SerializationWriter, catalogCrd_resources_validation: Partial<CatalogCrd_resources_validationMember1 | CatalogCrd_resources_validationMember2> | undefined | null = {}) : void {
    serializeCatalogCrd_resources_validationMember1(writer, catalogCrd_resources_validation as CatalogCrd_resources_validationMember1);
    serializeCatalogCrd_resources_validationMember2(writer, catalogCrd_resources_validation as CatalogCrd_resources_validationMember2);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCatalogCrd_resources_validationMember1(writer: SerializationWriter, catalogCrd_resources_validationMember1: Partial<CatalogCrd_resources_validationMember1> | undefined | null = {}) : void {
    if (catalogCrd_resources_validationMember1) {
        writer.writeObjectValue<CatalogCrd_resources_validationMember1_jsonSchema>("jsonSchema", catalogCrd_resources_validationMember1.jsonSchema, serializeCatalogCrd_resources_validationMember1_jsonSchema);
        writer.writeAdditionalData(catalogCrd_resources_validationMember1.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCatalogCrd_resources_validationMember1_jsonSchema(writer: SerializationWriter, catalogCrd_resources_validationMember1_jsonSchema: Partial<CatalogCrd_resources_validationMember1_jsonSchema> | undefined | null = {}) : void {
    if (catalogCrd_resources_validationMember1_jsonSchema) {
        writer.writeAdditionalData(catalogCrd_resources_validationMember1_jsonSchema.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCatalogCrd_resources_validationMember2(writer: SerializationWriter, catalogCrd_resources_validationMember2: Partial<CatalogCrd_resources_validationMember2> | undefined | null = {}) : void {
    if (catalogCrd_resources_validationMember2) {
        writer.writeObjectValue<CatalogCrd_resources_validationMember2_validationWebhook>("validationWebhook", catalogCrd_resources_validationMember2.validationWebhook, serializeCatalogCrd_resources_validationMember2_validationWebhook);
        writer.writeAdditionalData(catalogCrd_resources_validationMember2.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCatalogCrd_resources_validationMember2_validationWebhook(writer: SerializationWriter, catalogCrd_resources_validationMember2_validationWebhook: Partial<CatalogCrd_resources_validationMember2_validationWebhook> | undefined | null = {}) : void {
    if (catalogCrd_resources_validationMember2_validationWebhook) {
        writer.writeObjectValue<CatalogCrd_resources_validationMember2_validationWebhook_urls>("urls", catalogCrd_resources_validationMember2_validationWebhook.urls, serializeCatalogCrd_resources_validationMember2_validationWebhook_urls);
        writer.writeAdditionalData(catalogCrd_resources_validationMember2_validationWebhook.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCatalogCrd_resources_validationMember2_validationWebhook_urls(writer: SerializationWriter, catalogCrd_resources_validationMember2_validationWebhook_urls: Partial<CatalogCrd_resources_validationMember2_validationWebhook_urls> | undefined | null = {}) : void {
    if (catalogCrd_resources_validationMember2_validationWebhook_urls) {
        writer.writeStringValue("schema", catalogCrd_resources_validationMember2_validationWebhook_urls.schema);
        writer.writeStringValue("validation", catalogCrd_resources_validationMember2_validationWebhook_urls.validation);
        writer.writeAdditionalData(catalogCrd_resources_validationMember2_validationWebhook_urls.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCatalogItem(writer: SerializationWriter, catalogItem: Partial<CatalogItem> | undefined | null = {}) : void {
    if (catalogItem) {
        writer.writeObjectValue<CatalogItem_category>("category", catalogItem.category, serializeCatalogItem_category);
        writer.writeCollectionOfPrimitiveValues<string>("componentsIds", catalogItem.componentsIds);
        writer.writeStringValue("description", catalogItem.description);
        writer.writeObjectValue<CatalogItem_documentation>("documentation", catalogItem.documentation, serializeCatalogItem_documentation);
        writer.writeStringValue("_id", catalogItem.id);
        writer.writeStringValue("imageUrl", catalogItem.imageUrl);
        writer.writeBooleanValue("isLatest", catalogItem.isLatest);
        writer.writeStringValue("itemId", catalogItem.itemId);
        writer.writeEnumValue<CatalogItem_lifecycleStatus>("lifecycleStatus", catalogItem.lifecycleStatus);
        writer.writeStringValue("name", catalogItem.name);
        writer.writeStringValue("providerId", catalogItem.providerId);
        writer.writeBooleanValue("publishOnMiaDocumentation", catalogItem.publishOnMiaDocumentation);
        writer.writeDateValue("releaseDate", catalogItem.releaseDate);
        writer.writeStringValue("repositoryUrl", catalogItem.repositoryUrl);
        writer.writeObjectValue<CatalogItem_resources>("resources", catalogItem.resources, serializeCatalogItem_resources);
        writer.writeStringValue("supportedBy", catalogItem.supportedBy);
        writer.writeStringValue("supportedByImageUrl", catalogItem.supportedByImageUrl);
        writer.writeStringValue("tenantId", catalogItem.tenantId);
        writer.writeStringValue("type", catalogItem.type);
        writer.writeObjectValue<CatalogItem_version>("version", catalogItem.version, serializeCatalogItem_version);
        writer.writeObjectValue<CatalogItem_visibility>("visibility", catalogItem.visibility, serializeCatalogItem_visibility);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCatalogItem_category(writer: SerializationWriter, catalogItem_category: Partial<CatalogItem_category> | undefined | null = {}) : void {
    if (catalogItem_category) {
        writer.writeStringValue("id", catalogItem_category.id);
        writer.writeStringValue("label", catalogItem_category.label);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCatalogItem_documentation(writer: SerializationWriter, catalogItem_documentation: Partial<CatalogItem_documentation> | undefined | null = {}) : void {
    if (catalogItem_documentation) {
        writer.writeEnumValue<CatalogItem_documentation_type>("type", catalogItem_documentation.type);
        writer.writeStringValue("url", catalogItem_documentation.url);
        writer.writeAdditionalData(catalogItem_documentation.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCatalogItem_resources(writer: SerializationWriter, catalogItem_resources: Partial<CatalogItem_resources> | undefined | null = {}) : void {
    if (catalogItem_resources) {
        writer.writeAdditionalData(catalogItem_resources.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCatalogItem_version(writer: SerializationWriter, catalogItem_version: Partial<CatalogItem_version> | undefined | null = {}) : void {
    if (catalogItem_version) {
        writer.writeStringValue("name", catalogItem_version.name);
        writer.writeStringValue("releaseNote", catalogItem_version.releaseNote);
        writer.writeBooleanValue("security", catalogItem_version.security);
        writer.writeAdditionalData(catalogItem_version.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCatalogItem_visibility(writer: SerializationWriter, catalogItem_visibility: Partial<CatalogItem_visibility> | undefined | null = {}) : void {
    if (catalogItem_visibility) {
        writer.writeBooleanValue("allTenants", catalogItem_visibility.allTenants);
        writer.writeBooleanValue("public", catalogItem_visibility.public);
        writer.writeAdditionalData(catalogItem_visibility.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCatalogItemManifest(writer: SerializationWriter, catalogItemManifest: Partial<CatalogItemManifest> | undefined | null = {}) : void {
    if (catalogItemManifest) {
        writer.writeStringValue("categoryId", catalogItemManifest.categoryId);
        writer.writeStringValue("description", catalogItemManifest.description);
        writer.writeObjectValue<CatalogItemManifest_documentation>("documentation", catalogItemManifest.documentation, serializeCatalogItemManifest_documentation);
        writer.writeStringValue("imageUrl", catalogItemManifest.imageUrl);
        writer.writeStringValue("itemId", catalogItemManifest.itemId);
        writer.writeEnumValue<CatalogItemManifest_lifecycleStatus>("lifecycleStatus", catalogItemManifest.lifecycleStatus);
        writer.writeStringValue("name", catalogItemManifest.name);
        writer.writeStringValue("providerId", catalogItemManifest.providerId);
        writer.writeBooleanValue("publishOnMiaDocumentation", catalogItemManifest.publishOnMiaDocumentation);
        writer.writeDateValue("releaseDate", catalogItemManifest.releaseDate);
        writer.writeStringValue("repositoryUrl", catalogItemManifest.repositoryUrl);
        writer.writeObjectValue<CatalogItemManifest_resources>("resources", catalogItemManifest.resources, serializeCatalogItemManifest_resources);
        writer.writeStringValue("supportedBy", catalogItemManifest.supportedBy);
        writer.writeStringValue("supportedByImageUrl", catalogItemManifest.supportedByImageUrl);
        writer.writeStringValue("tenantId", catalogItemManifest.tenantId);
        writer.writeStringValue("type", catalogItemManifest.type);
        writer.writeObjectValue<CatalogItemManifest_version>("version", catalogItemManifest.version, serializeCatalogItemManifest_version);
        writer.writeObjectValue<CatalogItemManifest_visibility>("visibility", catalogItemManifest.visibility, serializeCatalogItemManifest_visibility);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCatalogItemManifest_documentation(writer: SerializationWriter, catalogItemManifest_documentation: Partial<CatalogItemManifest_documentation> | undefined | null = {}) : void {
    if (catalogItemManifest_documentation) {
        writer.writeEnumValue<CatalogItemManifest_documentation_type>("type", catalogItemManifest_documentation.type);
        writer.writeStringValue("url", catalogItemManifest_documentation.url);
        writer.writeAdditionalData(catalogItemManifest_documentation.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCatalogItemManifest_resources(writer: SerializationWriter, catalogItemManifest_resources: Partial<CatalogItemManifest_resources> | undefined | null = {}) : void {
    if (catalogItemManifest_resources) {
        writer.writeAdditionalData(catalogItemManifest_resources.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCatalogItemManifest_version(writer: SerializationWriter, catalogItemManifest_version: Partial<CatalogItemManifest_version> | undefined | null = {}) : void {
    if (catalogItemManifest_version) {
        writer.writeStringValue("name", catalogItemManifest_version.name);
        writer.writeStringValue("releaseNote", catalogItemManifest_version.releaseNote);
        writer.writeBooleanValue("security", catalogItemManifest_version.security);
        writer.writeAdditionalData(catalogItemManifest_version.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCatalogItemManifest_visibility(writer: SerializationWriter, catalogItemManifest_visibility: Partial<CatalogItemManifest_visibility> | undefined | null = {}) : void {
    if (catalogItemManifest_visibility) {
        writer.writeBooleanValue("allTenants", catalogItemManifest_visibility.allTenants);
        writer.writeBooleanValue("public", catalogItemManifest_visibility.public);
        writer.writeAdditionalData(catalogItemManifest_visibility.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCatalogRelease(writer: SerializationWriter, catalogRelease: Partial<CatalogRelease> | undefined | null = {}) : void {
    if (catalogRelease) {
        writer.writeStringValue("description", catalogRelease.description);
        writer.writeBooleanValue("isLatest", catalogRelease.isLatest);
        writer.writeEnumValue<CatalogRelease_lifecycleStatus>("lifecycleStatus", catalogRelease.lifecycleStatus);
        writer.writeStringValue("name", catalogRelease.name);
        writer.writeStringValue("reference", catalogRelease.reference);
        writer.writeDateValue("releaseDate", catalogRelease.releaseDate);
        writer.writeStringValue("releaseNote", catalogRelease.releaseNote);
        writer.writeBooleanValue("security", catalogRelease.security);
        writer.writeEnumValue<CatalogRelease_version>("version", catalogRelease.version);
        writer.writeObjectValue<CatalogRelease_visibility>("visibility", catalogRelease.visibility, serializeCatalogRelease_visibility);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCatalogRelease_visibility(writer: SerializationWriter, catalogRelease_visibility: Partial<CatalogRelease_visibility> | undefined | null = {}) : void {
    if (catalogRelease_visibility) {
        writer.writeBooleanValue("allTenants", catalogRelease_visibility.allTenants);
        writer.writeBooleanValue("public", catalogRelease_visibility.public);
        writer.writeAdditionalData(catalogRelease_visibility.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCatalogVersionedItem(writer: SerializationWriter, catalogVersionedItem: Partial<CatalogVersionedItem> | undefined | null = {}) : void {
    if (catalogVersionedItem) {
        writer.writeObjectValue<CatalogVersionedItem_category>("category", catalogVersionedItem.category, serializeCatalogVersionedItem_category);
        writer.writeCollectionOfPrimitiveValues<string>("componentsIds", catalogVersionedItem.componentsIds);
        writer.writeStringValue("description", catalogVersionedItem.description);
        writer.writeObjectValue<CatalogVersionedItem_documentation>("documentation", catalogVersionedItem.documentation, serializeCatalogVersionedItem_documentation);
        writer.writeStringValue("_id", catalogVersionedItem.id);
        writer.writeStringValue("imageUrl", catalogVersionedItem.imageUrl);
        writer.writeBooleanValue("isLatest", catalogVersionedItem.isLatest);
        writer.writeStringValue("itemId", catalogVersionedItem.itemId);
        writer.writeEnumValue<CatalogVersionedItem_lifecycleStatus>("lifecycleStatus", catalogVersionedItem.lifecycleStatus);
        writer.writeStringValue("name", catalogVersionedItem.name);
        writer.writeStringValue("providerId", catalogVersionedItem.providerId);
        writer.writeBooleanValue("publishOnMiaDocumentation", catalogVersionedItem.publishOnMiaDocumentation);
        writer.writeDateValue("releaseDate", catalogVersionedItem.releaseDate);
        writer.writeStringValue("repositoryUrl", catalogVersionedItem.repositoryUrl);
        writer.writeObjectValue<CatalogVersionedItem_resources>("resources", catalogVersionedItem.resources, serializeCatalogVersionedItem_resources);
        writer.writeStringValue("supportedBy", catalogVersionedItem.supportedBy);
        writer.writeStringValue("supportedByImageUrl", catalogVersionedItem.supportedByImageUrl);
        writer.writeStringValue("tenantId", catalogVersionedItem.tenantId);
        writer.writeStringValue("type", catalogVersionedItem.type);
        writer.writeObjectValue<CatalogVersionedItem_version>("version", catalogVersionedItem.version, serializeCatalogVersionedItem_version);
        writer.writeObjectValue<CatalogVersionedItem_visibility>("visibility", catalogVersionedItem.visibility, serializeCatalogVersionedItem_visibility);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCatalogVersionedItem_category(writer: SerializationWriter, catalogVersionedItem_category: Partial<CatalogVersionedItem_category> | undefined | null = {}) : void {
    if (catalogVersionedItem_category) {
        writer.writeStringValue("id", catalogVersionedItem_category.id);
        writer.writeStringValue("label", catalogVersionedItem_category.label);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCatalogVersionedItem_documentation(writer: SerializationWriter, catalogVersionedItem_documentation: Partial<CatalogVersionedItem_documentation> | undefined | null = {}) : void {
    if (catalogVersionedItem_documentation) {
        writer.writeEnumValue<CatalogVersionedItem_documentation_type>("type", catalogVersionedItem_documentation.type);
        writer.writeStringValue("url", catalogVersionedItem_documentation.url);
        writer.writeAdditionalData(catalogVersionedItem_documentation.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCatalogVersionedItem_resources(writer: SerializationWriter, catalogVersionedItem_resources: Partial<CatalogVersionedItem_resources> | undefined | null = {}) : void {
    if (catalogVersionedItem_resources) {
        writer.writeAdditionalData(catalogVersionedItem_resources.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCatalogVersionedItem_version(writer: SerializationWriter, catalogVersionedItem_version: Partial<CatalogVersionedItem_version> | undefined | null = {}) : void {
    if (catalogVersionedItem_version) {
        writer.writeStringValue("name", catalogVersionedItem_version.name);
        writer.writeStringValue("releaseNote", catalogVersionedItem_version.releaseNote);
        writer.writeBooleanValue("security", catalogVersionedItem_version.security);
        writer.writeAdditionalData(catalogVersionedItem_version.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCatalogVersionedItem_visibility(writer: SerializationWriter, catalogVersionedItem_visibility: Partial<CatalogVersionedItem_visibility> | undefined | null = {}) : void {
    if (catalogVersionedItem_visibility) {
        writer.writeBooleanValue("allTenants", catalogVersionedItem_visibility.allTenants);
        writer.writeBooleanValue("public", catalogVersionedItem_visibility.public);
        writer.writeAdditionalData(catalogVersionedItem_visibility.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHttpError(writer: SerializationWriter, httpError: Partial<HttpError> | undefined | null = {}) : void {
    if (httpError) {
        writer.writeStringValue("code", httpError.code);
        writer.writeStringValue("error", httpError.errorEscaped);
        writer.writeStringValue("message", httpError.messageEscaped);
        writer.writeNumberValue("statusCode", httpError.statusCode);
        writer.writeAdditionalData(httpError.additionalData);
    }
}
export const CatalogItem_documentation_typeObject = {
    ExternalLink: "externalLink",
    Markdown: "markdown",
} as const;
export const CatalogItem_lifecycleStatusObject = {
    ComingSoon: "coming-soon",
    Draft: "draft",
    Published: "published",
    Maintenance: "maintenance",
    Deprecated: "deprecated",
    Archived: "archived",
} as const;
export const CatalogItemManifest_documentation_typeObject = {
    ExternalLink: "externalLink",
    Markdown: "markdown",
} as const;
export const CatalogItemManifest_lifecycleStatusObject = {
    ComingSoon: "coming-soon",
    Draft: "draft",
    Published: "published",
    Maintenance: "maintenance",
    Deprecated: "deprecated",
    Archived: "archived",
} as const;
export const CatalogRelease_lifecycleStatusObject = {
    ComingSoon: "coming-soon",
    Draft: "draft",
    Published: "published",
    Maintenance: "maintenance",
    Deprecated: "deprecated",
    Archived: "archived",
} as const;
export const CatalogRelease_versionObject = {
    NA: "NA",
} as const;
export const CatalogVersionedItem_documentation_typeObject = {
    ExternalLink: "externalLink",
    Markdown: "markdown",
} as const;
export const CatalogVersionedItem_lifecycleStatusObject = {
    ComingSoon: "coming-soon",
    Draft: "draft",
    Published: "published",
    Maintenance: "maintenance",
    Deprecated: "deprecated",
    Archived: "archived",
} as const;
/* tslint:enable */
/* eslint-enable */
