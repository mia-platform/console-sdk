/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createCatalogVersionedItemFromDiscriminatorValue, createHttpErrorFromDiscriminatorValue, serializeCatalogVersionedItem, type CatalogVersionedItem, type HttpError } from '../../../../../../../../../models/index.js';
// @ts-ignore
import { createUntypedNodeFromDiscriminatorValue, type AdditionalDataHolder, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter, type UntypedNode } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MetadataPatchRequestBody_Set_documentation}
 */
// @ts-ignore
export function createMetadataPatchRequestBody_Set_documentationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMetadataPatchRequestBody_Set_documentation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MetadataPatchRequestBody_Set_version}
 */
// @ts-ignore
export function createMetadataPatchRequestBody_Set_versionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMetadataPatchRequestBody_Set_version;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MetadataPatchRequestBody_Set_visibility}
 */
// @ts-ignore
export function createMetadataPatchRequestBody_Set_visibilityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMetadataPatchRequestBody_Set_visibility;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MetadataPatchRequestBody_Set}
 */
// @ts-ignore
export function createMetadataPatchRequestBody_SetFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMetadataPatchRequestBody_Set;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MetadataPatchRequestBody_Unset}
 */
// @ts-ignore
export function createMetadataPatchRequestBody_UnsetFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMetadataPatchRequestBody_Unset;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MetadataPatchRequestBody}
 */
// @ts-ignore
export function createMetadataPatchRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMetadataPatchRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMetadataPatchRequestBody(metadataPatchRequestBody: Partial<MetadataPatchRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "$set": n => { metadataPatchRequestBody.set = n.getObjectValue<MetadataPatchRequestBody_Set>(createMetadataPatchRequestBody_SetFromDiscriminatorValue); },
        "$unset": n => { metadataPatchRequestBody.unset = n.getObjectValue<MetadataPatchRequestBody_Unset>(createMetadataPatchRequestBody_UnsetFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMetadataPatchRequestBody_Set(metadataPatchRequestBody_Set: Partial<MetadataPatchRequestBody_Set> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "categoryId": n => { metadataPatchRequestBody_Set.categoryId = n.getStringValue(); },
        "description": n => { metadataPatchRequestBody_Set.description = n.getStringValue(); },
        "documentation": n => { metadataPatchRequestBody_Set.documentation = n.getObjectValue<MetadataPatchRequestBody_Set_documentation>(createMetadataPatchRequestBody_Set_documentationFromDiscriminatorValue); },
        "imageUrl": n => { metadataPatchRequestBody_Set.imageUrl = n.getStringValue(); },
        "lifecycleStatus": n => { metadataPatchRequestBody_Set.lifecycleStatus = n.getEnumValue<MetadataPatchRequestBody_Set_lifecycleStatus>(MetadataPatchRequestBody_Set_lifecycleStatusObject); },
        "name": n => { metadataPatchRequestBody_Set.name = n.getStringValue(); },
        "providerId": n => { metadataPatchRequestBody_Set.providerId = n.getStringValue(); },
        "publishOnMiaDocumentation": n => { metadataPatchRequestBody_Set.publishOnMiaDocumentation = n.getBooleanValue(); },
        "releaseDate": n => { metadataPatchRequestBody_Set.releaseDate = n.getDateValue(); },
        "repositoryUrl": n => { metadataPatchRequestBody_Set.repositoryUrl = n.getStringValue(); },
        "supportedBy": n => { metadataPatchRequestBody_Set.supportedBy = n.getStringValue(); },
        "supportedByImageUrl": n => { metadataPatchRequestBody_Set.supportedByImageUrl = n.getStringValue(); },
        "version": n => { metadataPatchRequestBody_Set.version = n.getObjectValue<MetadataPatchRequestBody_Set_version>(createMetadataPatchRequestBody_Set_versionFromDiscriminatorValue); },
        "visibility": n => { metadataPatchRequestBody_Set.visibility = n.getObjectValue<MetadataPatchRequestBody_Set_visibility>(createMetadataPatchRequestBody_Set_visibilityFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMetadataPatchRequestBody_Set_documentation(metadataPatchRequestBody_Set_documentation: Partial<MetadataPatchRequestBody_Set_documentation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "type": n => { metadataPatchRequestBody_Set_documentation.type = n.getEnumValue<MetadataPatchRequestBody_Set_documentation_type>(MetadataPatchRequestBody_Set_documentation_typeObject); },
        "url": n => { metadataPatchRequestBody_Set_documentation.url = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMetadataPatchRequestBody_Set_version(metadataPatchRequestBody_Set_version: Partial<MetadataPatchRequestBody_Set_version> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "releaseNote": n => { metadataPatchRequestBody_Set_version.releaseNote = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMetadataPatchRequestBody_Set_visibility(metadataPatchRequestBody_Set_visibility: Partial<MetadataPatchRequestBody_Set_visibility> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "allTenants": n => { metadataPatchRequestBody_Set_visibility.allTenants = n.getBooleanValue(); },
        "public": n => { metadataPatchRequestBody_Set_visibility.public = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMetadataPatchRequestBody_Unset(metadataPatchRequestBody_Unset: Partial<MetadataPatchRequestBody_Unset> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "categoryId": n => { metadataPatchRequestBody_Unset.categoryId = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
        "description": n => { metadataPatchRequestBody_Unset.description = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
        "documentation": n => { metadataPatchRequestBody_Unset.documentation = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
        "imageUrl": n => { metadataPatchRequestBody_Unset.imageUrl = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
        "providerId": n => { metadataPatchRequestBody_Unset.providerId = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
        "publishOnMiaDocumentation": n => { metadataPatchRequestBody_Unset.publishOnMiaDocumentation = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
        "repositoryUrl": n => { metadataPatchRequestBody_Unset.repositoryUrl = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
        "supportedBy": n => { metadataPatchRequestBody_Unset.supportedBy = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
        "supportedByImageUrl": n => { metadataPatchRequestBody_Unset.supportedByImageUrl = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
        "visibility": n => { metadataPatchRequestBody_Unset.visibility = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
    }
}
export interface MetadataPatchRequestBody extends Parsable {
    /**
     * The Set property
     */
    set?: MetadataPatchRequestBody_Set | null;
    /**
     * The Unset property
     */
    unset?: MetadataPatchRequestBody_Unset | null;
}
export interface MetadataPatchRequestBody_Set extends Parsable {
    /**
     * The categoryId property
     */
    categoryId?: string | null;
    /**
     * The description property
     */
    description?: string | null;
    /**
     * The documentation property
     */
    documentation?: MetadataPatchRequestBody_Set_documentation | null;
    /**
     * The imageUrl property
     */
    imageUrl?: string | null;
    /**
     * The lifecycleStatus property
     */
    lifecycleStatus?: MetadataPatchRequestBody_Set_lifecycleStatus | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The providerId property
     */
    providerId?: string | null;
    /**
     * The publishOnMiaDocumentation property
     */
    publishOnMiaDocumentation?: boolean | null;
    /**
     * The releaseDate property
     */
    releaseDate?: Date | null;
    /**
     * The repositoryUrl property
     */
    repositoryUrl?: string | null;
    /**
     * The supportedBy property
     */
    supportedBy?: string | null;
    /**
     * The supportedByImageUrl property
     */
    supportedByImageUrl?: string | null;
    /**
     * The version property
     */
    version?: MetadataPatchRequestBody_Set_version | null;
    /**
     * The visibility property
     */
    visibility?: MetadataPatchRequestBody_Set_visibility | null;
}
export interface MetadataPatchRequestBody_Set_documentation extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The type property
     */
    type?: MetadataPatchRequestBody_Set_documentation_type | null;
    /**
     * The url property
     */
    url?: string | null;
}
export type MetadataPatchRequestBody_Set_documentation_type = (typeof MetadataPatchRequestBody_Set_documentation_typeObject)[keyof typeof MetadataPatchRequestBody_Set_documentation_typeObject];
export type MetadataPatchRequestBody_Set_lifecycleStatus = (typeof MetadataPatchRequestBody_Set_lifecycleStatusObject)[keyof typeof MetadataPatchRequestBody_Set_lifecycleStatusObject];
export interface MetadataPatchRequestBody_Set_version extends Parsable {
    /**
     * Markdown release note
     */
    releaseNote?: string | null;
}
export interface MetadataPatchRequestBody_Set_visibility extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The allTenants property
     */
    allTenants?: boolean | null;
    /**
     * The public property
     */
    public?: boolean | null;
}
export interface MetadataPatchRequestBody_Unset extends Parsable {
    /**
     * The categoryId property
     */
    categoryId?: UntypedNode | null;
    /**
     * The description property
     */
    description?: UntypedNode | null;
    /**
     * The documentation property
     */
    documentation?: UntypedNode | null;
    /**
     * The imageUrl property
     */
    imageUrl?: UntypedNode | null;
    /**
     * The providerId property
     */
    providerId?: UntypedNode | null;
    /**
     * The publishOnMiaDocumentation property
     */
    publishOnMiaDocumentation?: UntypedNode | null;
    /**
     * The repositoryUrl property
     */
    repositoryUrl?: UntypedNode | null;
    /**
     * The supportedBy property
     */
    supportedBy?: UntypedNode | null;
    /**
     * The supportedByImageUrl property
     */
    supportedByImageUrl?: UntypedNode | null;
    /**
     * The visibility property
     */
    visibility?: UntypedNode | null;
}
/**
 * Builds and executes requests for operations under /api/tenants/{tenantId}/marketplace/items/{itemId}/versions/{version}/metadata
 */
export interface MetadataRequestBuilder extends BaseRequestBuilder<MetadataRequestBuilder> {
    /**
     * Patches the metadata of a specific Marketplace item version
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<CatalogVersionedItem>}
     * @throws {HttpError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: MetadataPatchRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<CatalogVersionedItem | undefined>;
    /**
     * Patches the metadata of a specific Marketplace item version
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: MetadataPatchRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMetadataPatchRequestBody(writer: SerializationWriter, metadataPatchRequestBody: Partial<MetadataPatchRequestBody> | undefined | null = {}) : void {
    if (metadataPatchRequestBody) {
        writer.writeObjectValue<MetadataPatchRequestBody_Set>("$set", metadataPatchRequestBody.set, serializeMetadataPatchRequestBody_Set);
        writer.writeObjectValue<MetadataPatchRequestBody_Unset>("$unset", metadataPatchRequestBody.unset, serializeMetadataPatchRequestBody_Unset);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMetadataPatchRequestBody_Set(writer: SerializationWriter, metadataPatchRequestBody_Set: Partial<MetadataPatchRequestBody_Set> | undefined | null = {}) : void {
    if (metadataPatchRequestBody_Set) {
        writer.writeStringValue("categoryId", metadataPatchRequestBody_Set.categoryId);
        writer.writeStringValue("description", metadataPatchRequestBody_Set.description);
        writer.writeObjectValue<MetadataPatchRequestBody_Set_documentation>("documentation", metadataPatchRequestBody_Set.documentation, serializeMetadataPatchRequestBody_Set_documentation);
        writer.writeStringValue("imageUrl", metadataPatchRequestBody_Set.imageUrl);
        writer.writeEnumValue<MetadataPatchRequestBody_Set_lifecycleStatus>("lifecycleStatus", metadataPatchRequestBody_Set.lifecycleStatus);
        writer.writeStringValue("name", metadataPatchRequestBody_Set.name);
        writer.writeStringValue("providerId", metadataPatchRequestBody_Set.providerId);
        writer.writeBooleanValue("publishOnMiaDocumentation", metadataPatchRequestBody_Set.publishOnMiaDocumentation);
        writer.writeDateValue("releaseDate", metadataPatchRequestBody_Set.releaseDate);
        writer.writeStringValue("repositoryUrl", metadataPatchRequestBody_Set.repositoryUrl);
        writer.writeStringValue("supportedBy", metadataPatchRequestBody_Set.supportedBy);
        writer.writeStringValue("supportedByImageUrl", metadataPatchRequestBody_Set.supportedByImageUrl);
        writer.writeObjectValue<MetadataPatchRequestBody_Set_version>("version", metadataPatchRequestBody_Set.version, serializeMetadataPatchRequestBody_Set_version);
        writer.writeObjectValue<MetadataPatchRequestBody_Set_visibility>("visibility", metadataPatchRequestBody_Set.visibility, serializeMetadataPatchRequestBody_Set_visibility);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMetadataPatchRequestBody_Set_documentation(writer: SerializationWriter, metadataPatchRequestBody_Set_documentation: Partial<MetadataPatchRequestBody_Set_documentation> | undefined | null = {}) : void {
    if (metadataPatchRequestBody_Set_documentation) {
        writer.writeEnumValue<MetadataPatchRequestBody_Set_documentation_type>("type", metadataPatchRequestBody_Set_documentation.type);
        writer.writeStringValue("url", metadataPatchRequestBody_Set_documentation.url);
        writer.writeAdditionalData(metadataPatchRequestBody_Set_documentation.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMetadataPatchRequestBody_Set_version(writer: SerializationWriter, metadataPatchRequestBody_Set_version: Partial<MetadataPatchRequestBody_Set_version> | undefined | null = {}) : void {
    if (metadataPatchRequestBody_Set_version) {
        writer.writeStringValue("releaseNote", metadataPatchRequestBody_Set_version.releaseNote);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMetadataPatchRequestBody_Set_visibility(writer: SerializationWriter, metadataPatchRequestBody_Set_visibility: Partial<MetadataPatchRequestBody_Set_visibility> | undefined | null = {}) : void {
    if (metadataPatchRequestBody_Set_visibility) {
        writer.writeBooleanValue("allTenants", metadataPatchRequestBody_Set_visibility.allTenants);
        writer.writeBooleanValue("public", metadataPatchRequestBody_Set_visibility.public);
        writer.writeAdditionalData(metadataPatchRequestBody_Set_visibility.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMetadataPatchRequestBody_Unset(writer: SerializationWriter, metadataPatchRequestBody_Unset: Partial<MetadataPatchRequestBody_Unset> | undefined | null = {}) : void {
    if (metadataPatchRequestBody_Unset) {
        writer.writeObjectValue("categoryId", metadataPatchRequestBody_Unset.categoryId);
        writer.writeObjectValue("description", metadataPatchRequestBody_Unset.description);
        writer.writeObjectValue("documentation", metadataPatchRequestBody_Unset.documentation);
        writer.writeObjectValue("imageUrl", metadataPatchRequestBody_Unset.imageUrl);
        writer.writeObjectValue("providerId", metadataPatchRequestBody_Unset.providerId);
        writer.writeObjectValue("publishOnMiaDocumentation", metadataPatchRequestBody_Unset.publishOnMiaDocumentation);
        writer.writeObjectValue("repositoryUrl", metadataPatchRequestBody_Unset.repositoryUrl);
        writer.writeObjectValue("supportedBy", metadataPatchRequestBody_Unset.supportedBy);
        writer.writeObjectValue("supportedByImageUrl", metadataPatchRequestBody_Unset.supportedByImageUrl);
        writer.writeObjectValue("visibility", metadataPatchRequestBody_Unset.visibility);
    }
}
/**
 * Uri template for the request builder.
 */
export const MetadataRequestBuilderUriTemplate = "{+baseurl}/api/tenants/{tenantId}/marketplace/items/{itemId}/versions/{version}/metadata";
export const MetadataPatchRequestBody_Set_documentation_typeObject = {
    ExternalLink: "externalLink",
    Markdown: "markdown",
} as const;
export const MetadataPatchRequestBody_Set_lifecycleStatusObject = {
    ComingSoon: "coming-soon",
    Draft: "draft",
    Published: "published",
    Maintenance: "maintenance",
    Deprecated: "deprecated",
    Archived: "archived",
} as const;
/**
 * Metadata for all the requests in the request builder.
 */
export const MetadataRequestBuilderRequestsMetadata: RequestsMetadata = {
    patch: {
        uriTemplate: MetadataRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createHttpErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createCatalogVersionedItemFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeMetadataPatchRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
