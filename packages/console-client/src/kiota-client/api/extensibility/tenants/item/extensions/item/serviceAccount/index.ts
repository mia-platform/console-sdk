/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type AdditionalDataHolder, type ApiError, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ServiceAccount400Error}
 */
// @ts-ignore
export function createServiceAccount400ErrorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoServiceAccount400Error;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ServiceAccount500Error}
 */
// @ts-ignore
export function createServiceAccount500ErrorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoServiceAccount500Error;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ServiceAccountPostRequestBody_projectsRole_environmentsRole}
 */
// @ts-ignore
export function createServiceAccountPostRequestBody_projectsRole_environmentsRoleFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoServiceAccountPostRequestBody_projectsRole_environmentsRole;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ServiceAccountPostRequestBody_projectsRole}
 */
// @ts-ignore
export function createServiceAccountPostRequestBody_projectsRoleFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoServiceAccountPostRequestBody_projectsRole;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ServiceAccountPostRequestBody_publicKey}
 */
// @ts-ignore
export function createServiceAccountPostRequestBody_publicKeyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoServiceAccountPostRequestBody_publicKey;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ServiceAccountPostRequestBody}
 */
// @ts-ignore
export function createServiceAccountPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoServiceAccountPostRequestBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ServiceAccountPostResponse_projects}
 */
// @ts-ignore
export function createServiceAccountPostResponse_projectsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoServiceAccountPostResponse_projects;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ServiceAccountPostResponse}
 */
// @ts-ignore
export function createServiceAccountPostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoServiceAccountPostResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoServiceAccount400Error(serviceAccount400Error: Partial<ServiceAccount400Error> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "error": n => { serviceAccount400Error.errorEscaped = n.getStringValue(); },
        "message": n => { serviceAccount400Error.messageEscaped = n.getStringValue(); },
        "statusCode": n => { serviceAccount400Error.statusCode = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoServiceAccount500Error(serviceAccount500Error: Partial<ServiceAccount500Error> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "error": n => { serviceAccount500Error.errorEscaped = n.getStringValue(); },
        "message": n => { serviceAccount500Error.messageEscaped = n.getStringValue(); },
        "statusCode": n => { serviceAccount500Error.statusCode = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoServiceAccountPostRequestBody(serviceAccountPostRequestBody: Partial<ServiceAccountPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "name": n => { serviceAccountPostRequestBody.name = n.getStringValue(); },
        "projectsRole": n => { serviceAccountPostRequestBody.projectsRole = n.getCollectionOfObjectValues<ServiceAccountPostRequestBody_projectsRole>(createServiceAccountPostRequestBody_projectsRoleFromDiscriminatorValue); },
        "publicKey": n => { serviceAccountPostRequestBody.publicKey = n.getObjectValue<ServiceAccountPostRequestBody_publicKey>(createServiceAccountPostRequestBody_publicKeyFromDiscriminatorValue); },
        "role": n => { serviceAccountPostRequestBody.role = n.getStringValue(); },
        "tokenEndpointAuthMethod": n => { serviceAccountPostRequestBody.tokenEndpointAuthMethod = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoServiceAccountPostRequestBody_projectsRole(serviceAccountPostRequestBody_projectsRole: Partial<ServiceAccountPostRequestBody_projectsRole> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "environmentsRole": n => { serviceAccountPostRequestBody_projectsRole.environmentsRole = n.getCollectionOfObjectValues<ServiceAccountPostRequestBody_projectsRole_environmentsRole>(createServiceAccountPostRequestBody_projectsRole_environmentsRoleFromDiscriminatorValue); },
        "projectId": n => { serviceAccountPostRequestBody_projectsRole.projectId = n.getStringValue(); },
        "role": n => { serviceAccountPostRequestBody_projectsRole.role = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoServiceAccountPostRequestBody_projectsRole_environmentsRole(serviceAccountPostRequestBody_projectsRole_environmentsRole: Partial<ServiceAccountPostRequestBody_projectsRole_environmentsRole> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "envId": n => { serviceAccountPostRequestBody_projectsRole_environmentsRole.envId = n.getStringValue(); },
        "role": n => { serviceAccountPostRequestBody_projectsRole_environmentsRole.role = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoServiceAccountPostRequestBody_publicKey(serviceAccountPostRequestBody_publicKey: Partial<ServiceAccountPostRequestBody_publicKey> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoServiceAccountPostResponse(serviceAccountPostResponse: Partial<ServiceAccountPostResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "clientId": n => { serviceAccountPostResponse.clientId = n.getStringValue(); },
        "clientIdIssuedAt": n => { serviceAccountPostResponse.clientIdIssuedAt = n.getNumberValue(); },
        "clientSecret": n => { serviceAccountPostResponse.clientSecret = n.getStringValue(); },
        "clientSecretExpiresAt": n => { serviceAccountPostResponse.clientSecretExpiresAt = n.getNumberValue(); },
        "company": n => { serviceAccountPostResponse.company = n.getStringValue(); },
        "projects": n => { serviceAccountPostResponse.projects = n.getObjectValue<ServiceAccountPostResponse_projects>(createServiceAccountPostResponse_projectsFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoServiceAccountPostResponse_projects(serviceAccountPostResponse_projects: Partial<ServiceAccountPostResponse_projects> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeServiceAccount400Error(writer: SerializationWriter, serviceAccount400Error: Partial<ServiceAccount400Error> | undefined | null = {}) : void {
    if (serviceAccount400Error) {
        writer.writeStringValue("error", serviceAccount400Error.errorEscaped);
        writer.writeStringValue("message", serviceAccount400Error.messageEscaped);
        writer.writeNumberValue("statusCode", serviceAccount400Error.statusCode);
        writer.writeAdditionalData(serviceAccount400Error.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeServiceAccount500Error(writer: SerializationWriter, serviceAccount500Error: Partial<ServiceAccount500Error> | undefined | null = {}) : void {
    if (serviceAccount500Error) {
        writer.writeStringValue("error", serviceAccount500Error.errorEscaped);
        writer.writeStringValue("message", serviceAccount500Error.messageEscaped);
        writer.writeNumberValue("statusCode", serviceAccount500Error.statusCode);
        writer.writeAdditionalData(serviceAccount500Error.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeServiceAccountPostRequestBody(writer: SerializationWriter, serviceAccountPostRequestBody: Partial<ServiceAccountPostRequestBody> | undefined | null = {}) : void {
    if (serviceAccountPostRequestBody) {
        writer.writeStringValue("name", serviceAccountPostRequestBody.name);
        writer.writeCollectionOfObjectValues<ServiceAccountPostRequestBody_projectsRole>("projectsRole", serviceAccountPostRequestBody.projectsRole, serializeServiceAccountPostRequestBody_projectsRole);
        writer.writeObjectValue<ServiceAccountPostRequestBody_publicKey>("publicKey", serviceAccountPostRequestBody.publicKey, serializeServiceAccountPostRequestBody_publicKey);
        writer.writeStringValue("role", serviceAccountPostRequestBody.role);
        writer.writeStringValue("tokenEndpointAuthMethod", serviceAccountPostRequestBody.tokenEndpointAuthMethod);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeServiceAccountPostRequestBody_projectsRole(writer: SerializationWriter, serviceAccountPostRequestBody_projectsRole: Partial<ServiceAccountPostRequestBody_projectsRole> | undefined | null = {}) : void {
    if (serviceAccountPostRequestBody_projectsRole) {
        writer.writeCollectionOfObjectValues<ServiceAccountPostRequestBody_projectsRole_environmentsRole>("environmentsRole", serviceAccountPostRequestBody_projectsRole.environmentsRole, serializeServiceAccountPostRequestBody_projectsRole_environmentsRole);
        writer.writeStringValue("projectId", serviceAccountPostRequestBody_projectsRole.projectId);
        writer.writeStringValue("role", serviceAccountPostRequestBody_projectsRole.role);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeServiceAccountPostRequestBody_projectsRole_environmentsRole(writer: SerializationWriter, serviceAccountPostRequestBody_projectsRole_environmentsRole: Partial<ServiceAccountPostRequestBody_projectsRole_environmentsRole> | undefined | null = {}) : void {
    if (serviceAccountPostRequestBody_projectsRole_environmentsRole) {
        writer.writeStringValue("envId", serviceAccountPostRequestBody_projectsRole_environmentsRole.envId);
        writer.writeStringValue("role", serviceAccountPostRequestBody_projectsRole_environmentsRole.role);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeServiceAccountPostRequestBody_publicKey(writer: SerializationWriter, serviceAccountPostRequestBody_publicKey: Partial<ServiceAccountPostRequestBody_publicKey> | undefined | null = {}) : void {
    if (serviceAccountPostRequestBody_publicKey) {
        writer.writeAdditionalData(serviceAccountPostRequestBody_publicKey.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeServiceAccountPostResponse(writer: SerializationWriter, serviceAccountPostResponse: Partial<ServiceAccountPostResponse> | undefined | null = {}) : void {
    if (serviceAccountPostResponse) {
        writer.writeStringValue("clientId", serviceAccountPostResponse.clientId);
        writer.writeNumberValue("clientIdIssuedAt", serviceAccountPostResponse.clientIdIssuedAt);
        writer.writeStringValue("clientSecret", serviceAccountPostResponse.clientSecret);
        writer.writeNumberValue("clientSecretExpiresAt", serviceAccountPostResponse.clientSecretExpiresAt);
        writer.writeStringValue("company", serviceAccountPostResponse.company);
        writer.writeObjectValue<ServiceAccountPostResponse_projects>("projects", serviceAccountPostResponse.projects, serializeServiceAccountPostResponse_projects);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeServiceAccountPostResponse_projects(writer: SerializationWriter, serviceAccountPostResponse_projects: Partial<ServiceAccountPostResponse_projects> | undefined | null = {}) : void {
    if (serviceAccountPostResponse_projects) {
        writer.writeAdditionalData(serviceAccountPostResponse_projects.additionalData);
    }
}
export interface ServiceAccount400Error extends AdditionalDataHolder, ApiError, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The error property
     */
    errorEscaped?: string | null;
    /**
     * The message property
     */
    messageEscaped?: string | null;
    /**
     * The statusCode property
     */
    statusCode?: number | null;
}
export interface ServiceAccount500Error extends AdditionalDataHolder, ApiError, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The error property
     */
    errorEscaped?: string | null;
    /**
     * The message property
     */
    messageEscaped?: string | null;
    /**
     * The statusCode property
     */
    statusCode?: number | null;
}
export interface ServiceAccountPostRequestBody extends Parsable {
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The projectsRole property
     */
    projectsRole?: ServiceAccountPostRequestBody_projectsRole[] | null;
    /**
     * The publicKey property
     */
    publicKey?: ServiceAccountPostRequestBody_publicKey | null;
    /**
     * The role property
     */
    role?: string | null;
    /**
     * The tokenEndpointAuthMethod property
     */
    tokenEndpointAuthMethod?: string | null;
}
export interface ServiceAccountPostRequestBody_projectsRole extends Parsable {
    /**
     * The environmentsRole property
     */
    environmentsRole?: ServiceAccountPostRequestBody_projectsRole_environmentsRole[] | null;
    /**
     * The projectId property
     */
    projectId?: string | null;
    /**
     * The role property
     */
    role?: string | null;
}
export interface ServiceAccountPostRequestBody_projectsRole_environmentsRole extends Parsable {
    /**
     * The envId property
     */
    envId?: string | null;
    /**
     * The role property
     */
    role?: string | null;
}
export interface ServiceAccountPostRequestBody_publicKey extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface ServiceAccountPostResponse extends Parsable {
    /**
     * The clientId property
     */
    clientId?: string | null;
    /**
     * The clientIdIssuedAt property
     */
    clientIdIssuedAt?: number | null;
    /**
     * The clientSecret property
     */
    clientSecret?: string | null;
    /**
     * The clientSecretExpiresAt property
     */
    clientSecretExpiresAt?: number | null;
    /**
     * The company property
     */
    company?: string | null;
    /**
     * The projects property
     */
    projects?: ServiceAccountPostResponse_projects | null;
}
export interface ServiceAccountPostResponse_projects extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
/**
 * Builds and executes requests for operations under /api/extensibility/tenants/{tenantId}/extensions/{extensionId}/service-account
 */
export interface ServiceAccountRequestBuilder extends BaseRequestBuilder<ServiceAccountRequestBuilder> {
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ServiceAccount400Error} error when the service returns a 400 status code
     * @throws {ServiceAccount500Error} error when the service returns a 500 status code
     */
     delete(requestConfiguration?: RequestConfiguration<ServiceAccountRequestBuilderDeleteQueryParameters> | undefined) : Promise<void>;
    /**
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ServiceAccountPostResponse>}
     * @throws {ServiceAccount400Error} error when the service returns a 400 status code
     * @throws {ServiceAccount500Error} error when the service returns a 500 status code
     */
     post(body: ServiceAccountPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ServiceAccountPostResponse | undefined>;
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<ServiceAccountRequestBuilderDeleteQueryParameters> | undefined) : RequestInformation;
    /**
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: ServiceAccountPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
export interface ServiceAccountRequestBuilderDeleteQueryParameters {
    /**
     * determines whether the service account should be "virtually" removed, if so the link between the extension and service account will be removed while the service account will remain accessible from the IAM
     */
    virtual?: boolean;
}
/**
 * Uri template for the request builder.
 */
export const ServiceAccountRequestBuilderUriTemplate = "{+baseurl}/api/extensibility/tenants/{tenantId}/extensions/{extensionId}/service-account{?virtual*}";
/**
 * Metadata for all the requests in the request builder.
 */
export const ServiceAccountRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: ServiceAccountRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            400: createServiceAccount400ErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createServiceAccount500ErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    post: {
        uriTemplate: ServiceAccountRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            400: createServiceAccount400ErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createServiceAccount500ErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createServiceAccountPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeServiceAccountPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
