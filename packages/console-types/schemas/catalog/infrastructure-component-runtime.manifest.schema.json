{
  "$comment": "This file was automatically generated, do not modify it by hand. Instead, modify the source Typescript file, and run `pnpm types build:catalog-schemas`.",
  "$id": "catalog-infrastructure-component-runtime.manifest.schema.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Catalog infrastructure-component-runtime item manifest",
  "description": "Data model of a Catalog infrastructure-component-runtime item to apply",
  "type": "object",
  "properties": {
    "annotations": {
      "description": "An unstructured key value map that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying this object.",
      "type": "object",
      "patternProperties": {
        "^([a-zA-Z0-9][a-zA-Z0-9\\.\\-]{0,253}[\\/])?([a-zA-Z0-9][a-zA-Z0-9\\.\\-]{0,63}[a-zA-Z0-9]?)$": {
          "type": "string",
          "maxLength": 262144
        }
      },
      "additionalProperties": false,
      "examples": [
        {
          "imageregistry": "https://hub.docker.com/",
          "mia-platform.eu/version": "14.0.0"
        }
      ]
    },
    "categoryId": {
      "description": "Identifier of the item's category",
      "type": "string"
    },
    "description": {
      "description": "Brief description of the item",
      "type": "string"
    },
    "documentation": {
      "description": "Documentation of the item",
      "properties": {
        "type": {
          "enum": [
            "externalLink",
            "markdown"
          ],
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "url"
      ],
      "type": "object"
    },
    "imageUrl": {
      "description": "Url of the image associated with the item",
      "type": "string"
    },
    "itemId": {
      "type": "string",
      "pattern": "^[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?$",
      "minLength": 1,
      "maxLength": 63,
      "description": "RFC-1035 compliant identifier of the item. It forms a composite PK with tenantId and, if present, version.name"
    },
    "itemTypeDefinitionRef": {
      "description": "Reference to an Item Type Definition in the form of its composite primary key. At least one among `type` and `itemTypeDefinitionRef` must be set. If both are set, `type` will be ignored",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the Item Type Definition (references `itd.metadata.name`)",
          "type": "string",
          "pattern": "^[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?$",
          "minLength": 1,
          "maxLength": 63,
          "examples": [
            "plugin",
            "custom-workload",
            "ai-agent"
          ]
        },
        "namespace": {
          "description": "ID of the Item Type Definition namespace (references `itd.metadata.namespace.id`)",
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "name",
        "namespace"
      ],
      "additionalProperties": false
    },
    "labels": {
      "description": "A map of string keys and values that can be used to organize and categorize (scope and select) objects.",
      "type": "object",
      "patternProperties": {
        "^([a-zA-Z0-9][a-zA-Z0-9\\.\\-]{0,253}[\\/])?([a-zA-Z0-9][a-zA-Z0-9\\.\\-]{0,63}[a-zA-Z0-9]?)$": {
          "type": "string",
          "pattern": "^$|^[a-zA-Z0-9](?:[a-zA-Z0-9._-]{0,61}[a-zA-Z0-9])?$",
          "maxLength": 63
        }
      },
      "additionalProperties": false,
      "examples": [
        {
          "environment": "dev",
          "mia-platform.eu/tenant": "my-company",
          "track": ""
        }
      ]
    },
    "lifecycleStatus": {
      "description": "Lifecycle status of the item",
      "enum": [
        "coming-soon",
        "draft",
        "published",
        "maintenance",
        "deprecated",
        "archived"
      ],
      "type": "string"
    },
    "links": {
      "description": "A list of external hyperlinks.",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "url": {
            "description": "The URL in standard URI format.",
            "type": "string",
            "pattern": "https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&\\/=]*)$"
          },
          "displayName": {
            "description": "A user-friendly title for the link.",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "url"
        ],
        "examples": [
          {
            "url": "https://mia-platform.eu/",
            "displayName": "Mia-Platform"
          },
          {
            "url": "https://example.com"
          }
        ]
      }
    },
    "maintainers": {
      "description": "A list of organizational entities maintaining this object.",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The display name of the maintainer.",
            "type": "string",
            "minLength": 1
          },
          "email": {
            "description": "A contact email of the maintainer.",
            "type": "string",
            "format": "email",
            "minLength": 1
          }
        },
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "examples": [
          {
            "name": "John Doe",
            "email": "john.doe@mail.com"
          },
          {
            "name": "Mia-Platform core team"
          }
        ]
      }
    },
    "name": {
      "description": "Human-readable name of the item",
      "minLength": 1,
      "type": "string"
    },
    "providerId": {
      "description": "Identifier of the provider used to retrieve markdown documentation content and external resources, if supported by the item type",
      "type": "string"
    },
    "relationships": {
      "description": "List of relationships from the current Catalog entity to any other entity (either it part of the Catalog or not)",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "target": {
            "description": "The receiving end of the relationships. It can be a URN-reference to another Catalog entity or an arbitrary string",
            "type": "string"
          },
          "type": {
            "description": "The type of the relationships. It can be one of the Catalog well-known relationships or an arbitrary string",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "target",
          "type"
        ]
      }
    },
    "releaseDate": {
      "description": "Creation date of this item's release",
      "format": "date-time",
      "type": "string"
    },
    "repositoryUrl": {
      "description": "URL of the repository containing the source code of the resource created by the item",
      "type": "string"
    },
    "resources": {
      "additionalProperties": false,
      "properties": {
        "projectId": {
          "type": "string",
          "description": "project object id"
        },
        "name": {
          "type": "string",
          "description": "name of the resource"
        },
        "tags": {
          "type": "array",
          "description": "list of tags useful for organize data",
          "items": {
            "type": "string"
          }
        },
        "runtimeData": {
          "type": "object",
          "additionalProperties": true
        }
      },
      "type": "object"
    },
    "supportedBy": {
      "description": "Identifier of the company that has produced the item",
      "type": "string"
    },
    "supportedByImageUrl": {
      "description": "Url of the image associated with the company that has produced the item",
      "type": "string"
    },
    "tags": {
      "description": "A list of single-valued strings.",
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^[a-z0-9:+#]+(-[a-z0-9:+#]+)*$",
        "minLength": 1,
        "maxLength": 63
      },
      "examples": [
        [
          "ai",
          "production"
        ]
      ]
    },
    "tenantId": {
      "description": "Identifier of the tenant to which the item belongs. It forms a composite PK with itemId and, if present, version.name",
      "type": "string"
    },
    "type": {
      "const": "infrastructure-component-runtime"
    },
    "visibility": {
      "description": "Visibility of the item",
      "properties": {
        "allTenants": {
          "default": false,
          "description": "If true, the item will be accessible to all companies",
          "type": "boolean"
        },
        "public": {
          "default": false,
          "description": "If true, the item will be accessible from any user that access the Console, even if not authenticated",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "$schema": {
      "type": "string"
    }
  },
  "additionalProperties": false,
  "required": [
    "name",
    "itemId",
    "tenantId",
    "resources",
    "lifecycleStatus"
  ]
}