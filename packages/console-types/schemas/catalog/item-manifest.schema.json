{
  "$comment": "This file was automatically generated, do not modify it by hand. Instead, modify the source Typescript file, and run `pnpm types build:catalog-schemas`.",
  "$id": "catalog-item-manifest.schema.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Catalog item manifest",
  "description": "Data model of a Catalog item to apply",
  "type": "object",
  "properties": {
    "annotations": {
      "description": "Set of non-identifying key/value pairs akin to Kubernetes object annotations",
      "type": "object",
      "patternProperties": {
        "^([a-zA-Z0-9][a-zA-Z0-9\\.\\-]{0,253}[\\/])?([a-zA-Z0-9][a-zA-Z0-9\\.\\-]{0,63}[a-zA-Z0-9]?)$": {
          "type": "string",
          "pattern": "^$|^[a-zA-Z0-9](?:[a-zA-Z0-9._-]{0,61}[a-zA-Z0-9])?$",
          "maxLength": 63
        }
      },
      "additionalProperties": false
    },
    "categoryId": {
      "description": "Identifier of the item's category",
      "type": "string"
    },
    "description": {
      "description": "Brief description of the item",
      "type": "string"
    },
    "documentation": {
      "description": "Documentation of the item",
      "properties": {
        "type": {
          "enum": [
            "externalLink",
            "markdown"
          ],
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "url"
      ],
      "type": "object"
    },
    "imageUrl": {
      "description": "Url of the image associated with the item",
      "type": "string"
    },
    "itemId": {
      "description": "RFC-1035 compliant identifier of the item. It forms a composite PK with tenantId and, if present, version.name",
      "type": "string",
      "pattern": "^[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?$",
      "minLength": 1,
      "maxLength": 63
    },
    "itemTypeDefinitionRef": {
      "description": "Reference to an Item Type Definition in the form of its composite primary key. At least one among `type` and `itemTypeDefinitionRef` must be set. If both are set, `type` will be ignored",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the Item Type Definition (references `itd.metadata.name`)",
          "type": "string",
          "pattern": "^[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?$",
          "minLength": 1,
          "maxLength": 63
        },
        "namespace": {
          "description": "ID of the Item Type Definition namespace (references `itd.metadata.namespace.id`)",
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "name",
        "namespace"
      ],
      "additionalProperties": false
    },
    "labels": {
      "description": "Set of identifying key/value pairs akin to Kubernetes object labels",
      "type": "object",
      "patternProperties": {
        "^([a-zA-Z0-9][a-zA-Z0-9\\.\\-]{0,253}[\\/])?([a-zA-Z0-9][a-zA-Z0-9\\.\\-]{0,63}[a-zA-Z0-9]?)$": {
          "type": "string",
          "pattern": "^$|^[a-zA-Z0-9](?:[a-zA-Z0-9._-]{0,61}[a-zA-Z0-9])?$",
          "maxLength": 63
        }
      },
      "additionalProperties": false
    },
    "lifecycleStatus": {
      "description": "Lifecycle status of the item",
      "enum": [
        "coming-soon",
        "draft",
        "published",
        "maintenance",
        "deprecated",
        "archived"
      ],
      "type": "string"
    },
    "links": {
      "description": "List of external hyperlinks",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "url": {
            "description": "URL in standard uri format",
            "type": "string"
          },
          "displayName": {
            "description": "User friendly display name for the link",
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "url"
        ]
      }
    },
    "maintainers": {
      "description": "List of organizational entities maintaining the resource",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Display name of the entity",
            "type": "string",
            "minLength": 1
          },
          "email": {
            "description": "Contact email of the entity",
            "type": "string",
            "format": "email",
            "minLength": 1
          }
        },
        "additionalProperties": false,
        "required": [
          "name"
        ]
      }
    },
    "name": {
      "description": "Human-readable name of the item",
      "minLength": 1,
      "type": "string"
    },
    "providerId": {
      "description": "Identifier of the provider used to retrieve markdown documentation content and external resources, if supported by the item type",
      "type": "string"
    },
    "publishOnMiaDocumentation": {
      "description": "Flag stating if the resource documentation should be published on Mia-Platform public documentation",
      "type": "boolean"
    },
    "relations": {
      "description": "List of relations from the current Catalog entity to any other entity (either it part of the Catalog or not)",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "target": {
            "description": "The receiving end of the relation. It can be a URN-reference to another Catalog entity or an arbitrary string",
            "type": "string"
          },
          "type": {
            "description": "The type of the relation. It can be one of the Catalog well-known relations or an arbitrary string"
          }
        },
        "additionalProperties": false,
        "required": [
          "target",
          "type"
        ]
      }
    },
    "releaseDate": {
      "description": "Creation date of this item's release",
      "format": "date-time",
      "type": "string"
    },
    "repositoryUrl": {
      "description": "URL of the repository containing the source code of the resource created by the item",
      "type": "string"
    },
    "resources": {
      "additionalProperties": true,
      "description": "Representation of the resource that will be created starting from this item. It could be validated through the matching CRD",
      "type": "object"
    },
    "supportedBy": {
      "description": "Identifier of the company that has produced the item",
      "type": "string"
    },
    "supportedByImageUrl": {
      "description": "Url of the image associated with the company that has produced the item",
      "type": "string"
    },
    "tags": {
      "description": "List of single-valued strings",
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^[a-z0-9:+#]+(-[a-z0-9:+#]+)*$",
        "minLength": 1,
        "maxLength": 63
      }
    },
    "tenantId": {
      "description": "Identifier of the tenant to which the item belongs. It forms a composite PK with itemId and, if present, version.name",
      "type": "string"
    },
    "type": {
      "description": "Type of the item. Deprecated in favour of `itemTypeDefinitionRef`. At least one among `type` and `itemTypeDefinitionRef` must be set. If both are set, `type` will be ignored",
      "type": "string",
      "deprecated": true
    },
    "version": {
      "description": "Version of the item following semver",
      "properties": {
        "name": {
          "description": "Semantic version",
          "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
          "type": "string"
        },
        "releaseNote": {
          "description": "Markdown release note",
          "type": "string"
        },
        "security": {
          "description": "Flag stating if the version addresses any vulnerability",
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "releaseNote"
      ],
      "type": "object"
    },
    "visibility": {
      "description": "Visibility of the item",
      "properties": {
        "allTenants": {
          "default": false,
          "description": "If true, the item will be accessible to all companies",
          "type": "boolean"
        },
        "public": {
          "default": false,
          "description": "If true, the item will be accessible from any user that access the Console, even if not authenticated",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "$schema": {
      "type": "string"
    }
  },
  "additionalProperties": false,
  "required": [
    "name",
    "itemId",
    "tenantId",
    "resources",
    "lifecycleStatus"
  ]
}